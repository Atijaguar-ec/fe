user  nginx;
worker_processes  auto;  # Usar todos los cores disponibles
error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
  worker_connections  2048;  # Aumentado para producción
  use epoll;  # Optimización para Linux
  multi_accept on;
}

http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;
  
  # Log format optimizado para producción
  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    '$request_time $upstream_response_time';
                    
  access_log  /var/log/nginx/access.log  main;
  
  # Optimizaciones de performance
  sendfile        on;
  tcp_nopush      on;
  tcp_nodelay     on;
  keepalive_timeout  65;
  types_hash_max_size 2048;
  client_max_body_size 50M;  # Para uploads de archivos
  
  # Compresión gzip
  gzip on;
  gzip_vary on;
  gzip_min_length 1024;
  gzip_proxied any;
  gzip_comp_level 6;
  gzip_types
    application/atom+xml
    application/geo+json
    application/javascript
    application/x-javascript
    application/json
    application/ld+json
    application/manifest+json
    application/rdf+xml
    application/rss+xml
    application/xhtml+xml
    application/xml
    font/eot
    font/otf
    font/ttf
    image/svg+xml
    text/css
    text/javascript
    text/plain
    text/xml;

  # Rate limiting para APIs
  limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
  limit_req_zone $binary_remote_addr zone=login:10m rate=5r/m;

  server {
    listen       80;
    server_name  _;  # Cambiar por tu dominio en producción real
    
    # Security headers globales
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # Rate limiting específico para login
    location /api/user/login {
      limit_req zone=login burst=3 nodelay;
      
      proxy_pass http://127.0.0.1:8080/api/user/login;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header X-Forwarded-Host $server_name;
      proxy_set_header X-Forwarded-Port $server_port;
      proxy_set_header Connection "";
      proxy_http_version 1.1;
      
      # Timeouts específicos para login
      proxy_connect_timeout 10s;
      proxy_send_timeout 10s;
      proxy_read_timeout 10s;
      proxy_buffering off;
    }

    # Proxy todas las demás rutas /api/ al backend Java Spring Boot
    location /api/ {
      limit_req zone=api burst=20 nodelay;
      
      proxy_pass http://127.0.0.1:8080/api/;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header X-Forwarded-Host $server_name;
      proxy_set_header X-Forwarded-Port $server_port;
      proxy_set_header Connection "";
      proxy_http_version 1.1;
      
      # Configuración optimizada para APIs
      proxy_connect_timeout 30s;
      proxy_send_timeout 30s;
      proxy_read_timeout 30s;
      proxy_buffering off;
      
      # Cache para APIs específicas (solo GET)
      location ~* ^/api/(countries|currencies|value-chains)$ {
        proxy_cache_valid 200 1h;
        add_header X-Cache-Status $upstream_cache_status;
      }
    }

    # Assets estáticos con cache agresivo
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot|webp)$ {
      root /app;
      expires 1y;
      add_header Cache-Control "public, immutable";
      add_header X-Content-Type-Options "nosniff" always;
      
      # Compresión específica para assets
      gzip_static on;
    }

    # Sirve el frontend Angular para todas las demás rutas
    location / {
      root   /app;
      index  index.html;
      try_files $uri $uri/ /index.html;
      
      # Cache para HTML
      location = /index.html {
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
      }
      
      # Cache para otros archivos HTML
      location ~* \.html$ {
        expires 1h;
        add_header Cache-Control "public";
      }
    }

    # Health check endpoint
    location /health {
      access_log off;
      return 200 "healthy\n";
      add_header Content-Type text/plain;
    }

    # Bloquear acceso a archivos sensibles
    location ~ /\. {
      deny all;
      access_log off;
      log_not_found off;
    }
    
    location ~ \.(env|config|conf)$ {
      deny all;
      access_log off;
      log_not_found off;
    }

    # Páginas de error personalizadas
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
      root   /usr/share/nginx/html;
    }

    # Logs específicos para troubleshooting
    access_log  /var/log/nginx/inatrace_access.log  main;
    error_log   /var/log/nginx/inatrace_error.log warn;
  }
}
