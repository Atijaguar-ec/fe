/*
 * Copyright(c) 2009 - 2019 Abelium d.o.o.
 * Kajuhova 90, 1000 Ljubljana, Slovenia
 * All rights reserved
 * Copyright(c) 1995 - 2018 T-Systems Multimedia Solutions GmbH
 * Riesaer Str. 5, 01129 Dresden
 * All rights reserved.
 *
 * coffee-be
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the openapi-typescript-angular-generator.
 * https://github.com/alenabelium/openapi-typescript-angular-generator
 * Do not edit the class manually.
 */





export interface ContactInfo { 
    /**
     * Phone number
     */
    phone?: string;
    /**
     * Email
     */
    email?: string;
    /**
     * Whether a contact has a smart phone.
     */
    hasSmartPhone?: boolean;
}

/**
 * Namespace for property- and property-value-enumerations of ContactInfo.
 */
export namespace ContactInfo {
    /**
     * All properties of ContactInfo.
     */
    export enum Properties {
        /**
         * Phone number
         */
        phone = 'phone',
        /**
         * Email
         */
        email = 'email',
        /**
         * Whether a contact has a smart phone.
         */
        hasSmartPhone = 'hasSmartPhone'
    }


    export function formMetadata() {
        return  {
            metadata: formMetadata,
            classname: 'ContactInfo',
            vars: [
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'phone',
                    classname: 'ContactInfo',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'email',
                    classname: 'ContactInfo',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'hasSmartPhone',
                    classname: 'ContactInfo',
                    dataType: 'boolean',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
            ],
            validators: {
                phone: [
                ],
                email: [
                ],
                hasSmartPhone: [
                ],
            }
        }
    }

  // export const ContactInfoValidationScheme = {
  //     validators: [],
  //     fields: {
  //               phone: {
  //                   validators: []
  //               },
  //               email: {
  //                   validators: []
  //               },
  //               hasSmartPhone: {
  //                   validators: []
  //               },
  //     }
  // } as SimpleValidationScheme<ContactInfo>;


}


