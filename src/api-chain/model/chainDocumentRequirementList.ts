/*
 * Copyright(c) 2009 - 2019 Abelium d.o.o.
 * Kajuhova 90, 1000 Ljubljana, Slovenia
 * All rights reserved
 * Copyright(c) 1995 - 2018 T-Systems Multimedia Solutions GmbH
 * Riesaer Str. 5, 01129 Dresden
 * All rights reserved.
 *
 * coffee-be
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the openapi-typescript-angular-generator.
 * https://github.com/alenabelium/openapi-typescript-angular-generator
 * Do not edit the class manually.
 */


import { ChainDocumentRequirement } from './chainDocumentRequirement';
import { ScoreTargets } from './scoreTargets';



export interface ChainDocumentRequirementList { 
    /**
     * Identifier for document requirement (defining type)
     */
    identifier: string;
    /**
     * Semi product for which document requirement list is relevant.
     */
    semiProductId?: string;
    /**
     * List of document requirements
     */
    requirements: Array<ChainDocumentRequirement>;
    targets: ScoreTargets;
}

/**
 * Namespace for property- and property-value-enumerations of ChainDocumentRequirementList.
 */
export namespace ChainDocumentRequirementList {
    /**
     * All properties of ChainDocumentRequirementList.
     */
    export enum Properties {
        /**
         * Identifier for document requirement (defining type)
         */
        identifier = 'identifier',
        /**
         * Semi product for which document requirement list is relevant.
         */
        semiProductId = 'semiProductId',
        /**
         * List of document requirements
         */
        requirements = 'requirements',
        targets = 'targets'
    }


    export function formMetadata() {
        return  {
            metadata: formMetadata,
            classname: 'ChainDocumentRequirementList',
            vars: [
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: true,
                    name: 'identifier',
                    classname: 'ChainDocumentRequirementList',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'semiProductId',
                    classname: 'ChainDocumentRequirementList',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    metadata: ChainDocumentRequirement.formMetadata,
                    isReadOnly: false,
                    isEnum: false,
                    required: true,
                    name: 'requirements',
                    classname: 'ChainDocumentRequirementList',
                    dataType: 'Array&lt;ChainDocumentRequirement&gt;',
                    isPrimitiveType: false,
                    isListContainer: true,
                    complexType: 'ChainDocumentRequirement'
                },
                {
                    metadata: ScoreTargets.formMetadata,
                    isReadOnly: false,
                    isEnum: false,
                    required: true,
                    name: 'targets',
                    classname: 'ChainDocumentRequirementList',
                    dataType: 'ScoreTargets',
                    isPrimitiveType: false,
                    isListContainer: false,
                    complexType: 'ScoreTargets'
                },
            ],
            validators: {
                identifier: [
                        ['required'],
                ],
                semiProductId: [
                ],
                requirements: [
                        ['required'],
                ],
                targets: [
                        ['required'],
                ],
            }
        }
    }

  // export const ChainDocumentRequirementListValidationScheme = {
  //     validators: [],
  //     fields: {
  //               identifier: {
  //                   validators: []
  //               },
  //               semiProductId: {
  //                   validators: []
  //               },
  //               requirements: {
  //                   validators: []
  //               },
  //               targets: {
  //                   validators: []
  //               },
  //     }
  // } as SimpleValidationScheme<ChainDocumentRequirementList>;


}


