/*
 * Copyright(c) 2009 - 2019 Abelium d.o.o.
 * Kajuhova 90, 1000 Ljubljana, Slovenia
 * All rights reserved
 * Copyright(c) 1995 - 2018 T-Systems Multimedia Solutions GmbH
 * Riesaer Str. 5, 01129 Dresden
 * All rights reserved.
 *
 * coffee-be
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the openapi-typescript-angular-generator.
 * https://github.com/alenabelium/openapi-typescript-angular-generator
 * Do not edit the class manually.
 */


import { ChainActionType } from './chainActionType';
import { ChainCertification } from './chainCertification';
import { ChainCompanyCustomer } from './chainCompanyCustomer';
import { ChainDocumentRequirementList } from './chainDocumentRequirementList';
import { ChainFacility } from './chainFacility';
import { ChainGradeAbbreviation } from './chainGradeAbbreviation';
import { ChainLocation } from './chainLocation';
import { ChainOrganization } from './chainOrganization';
import { ChainProcessingAction } from './chainProcessingAction';
import { ChainProcessingOrder } from './chainProcessingOrder';
import { ChainProductOrder } from './chainProductOrder';
import { ChainSemiProduct } from './chainSemiProduct';
import { ChainTransaction } from './chainTransaction';
import { ChainUserCustomer } from './chainUserCustomer';


/**
 * Represents a product instance (package, bag, container, drying bed, etc.) of a product defined by ChainProduct. Product unit is located on one facility only. It is measured by some quantity units (unitType) and by the number totalQuantity. Ti has official production date (productionDate) and expiry date (expiryDate) A product unit may be represented by a label FE.  Product unit can be created from nothing (e.g. picking the coffee). In general product unit is created by some transactions (ChainTransaction). Product unit does not change its facility. Instead a product unit is transformed by a list of transactions (Chain) to different product unit either in the same facility or in some other facility.
 */

export interface ChainStockOrder { 
    docType?: string;
    _id?: string;
    _rev?: string;
    /**
     * Timestamp of creation
     */
    created?: string;
    /**
     * Timestamp of last change
     */
    lastChange?: string;
    /**
     * Id of user that created the document.
     */
    userCreatedId?: string;
    /**
     * Id of user that changed the document.
     */
    userChangedId?: string;
    /**
     * Official creation date/time
     */
    formalCreationTime?: string;
    /**
     * Human readable identifier
     */
    identifier?: string;
    /**
     * Id of the user creator
     */
    creatorId?: string;
    /**
     * Representative of producer user customer. E.g. collector. Relevant only for order type: PURCHASE_ORDER
     */
    representativeOfProducerUserCustomerId?: string;
    /**
     * Id of the person who has produced the entry. Relevant only for order type: PURCHASE_ORDER
     */
    producerUserCustomerId?: string;
    productionLocation?: ChainLocation;
    certificates?: Array<ChainCertification>;
    /**
     * Consumer company customer. Relevant for order type: SALES_ORDER
     */
    consumerCompanyCustomerId?: string;
    /**
     * Reference to the semi product
     */
    semiProductId: string;
    /**
     * Facility Id where product unit is located
     */
    facilityId: string;
    /**
     * Calculated from facility during insert.
     */
    organizationId?: string;
    /**
     * Quantity unit tipe. Calculated automatically from semiProduct at insertion.
     */
    measurementUnitType?: any;
    /**
     * Total ordered quantity
     */
    totalQuantity: number;
    /**
     * Fulfilled quantity (<= totalQuantity)
     */
    fullfilledQuantity: number;
    /**
     * Available quantity ( <= fulfilledQuantity)
     */
    availableQuantity: number;
    /**
     * '1' if availableQuantity > 0. Set automatically.
     */
    isAvailable?: any;
    /**
     * Production date
     */
    productionDate: string;
    /**
     * Expiry date
     */
    expiryDate?: string;
    /**
     * Estimated delivery date
     */
    estimatedDeliveryDate?: string;
    /**
     * Preferred delivery date.
     */
    deliveryTime?: string;
    /**
     * Order which triggered creation of the product unit
     */
    orderId?: string;
    /**
     * Global order id. Global order is initial order that triggers other orders in value chain.
     */
    globalOrderId?: string;
    documentRequirements?: ChainDocumentRequirementList;
    /**
     * Price per unit (purchase price). Relevant for type PURCHASE_ORDER. Irrelevant for PROCESSING_ORDER. Should be calculated from input transactions for SALES_ORDER and GENERAL_ORDER
     */
    pricePerUnit?: number;
    /**
     * Sales price per unit.
     */
    salesPricePerUnit?: number;
    /**
     * Purchase currency. Currency code according to ISO 4217 for pricePerUnit. Relevant for all orders. In case of order type SALES_ORDER it denotes the price of sale to the final customer.
     */
    currency?: string;
    /**
     * Sales currency. Currency code according to ISO 4217 for pricePerUnit
     */
    salesCurrency?: string;
    /**
     * Is it a purchase order? Depricated, should use orderType: PURCHASE_ORDER
     */
    isPurchaseOrder?: boolean;
    /**
     * Order type. - PURCHASE_ORDER - created during purchase of coffee from farmers. No input transactions, allows output transactions. - PROCESSING_ORDER - created as a result of a processing transaction. No input transactions, allows output transactions. - SALES_ORDER - created on behalf of final customer. Filled by input transactions. No output transactions allowed. - GENERAL - general (transport) order in the middle of the value chain. Allows input and output transactions. - TRANSFER ORDER - generated through transfer processing actions
     */
    orderType?: any;
    /**
     * Grade abbreviaton id
     */
    gradeAbbreviationId?: string;
    /**
     * Internal lot number
     */
    internalLotNumber?: string;
    /**
     * External lot number
     */
    lotNumber?: string;
    /**
     * Screen size
     */
    screenSize?: string;
    /**
     * Comments
     */
    comments?: string;
    actionType?: ChainActionType;
    /**
     * Share between 0 and 1 (100%)
     */
    womenShare?: number;
    /**
     * Cost (to be paid, calculated automatically)
     */
    cost?: number;
    /**
     * Amount paid (calculated automatically)
     */
    paid?: number;
    /**
     * Balance to be paid (calculated automatically)
     */
    balance?: number;
    semiProduct?: ChainSemiProduct;
    facility?: ChainFacility;
    representativeOfProducerUserCustomer?: ChainUserCustomer;
    producerUserCustomer?: ChainUserCustomer;
    /**
     * Input transactions for stock order. Read only.
     */
    inputTransactions?: Array<ChainTransaction>;
    /**
     * Output transactions for stock order. Read only.
     */
    outputTransactions?: Array<ChainTransaction>;
    /**
     * Lot label
     */
    lotLabel?: string;
    /**
     * Start of drying
     */
    startOfDrying?: string;
    /**
     * Client's name (ID) TODO: add foreign key, when ApiProductCompany is defined
     */
    clientId?: number;
    /**
     * Flavour profile
     */
    flavourProfile?: string;
    /**
     * Processing action id. The order cannot be deleted directly through API, if this is not null.
     */
    processingActionId?: string;
    processingAction?: ChainProcessingAction;
    gradeAbbreviation?: ChainGradeAbbreviation;
    /**
     * Reference to processing order
     */
    processingOrderId?: string;
    processingOrder?: ChainProcessingOrder;
    preferredWayOfPayment?: any;
    consumerCompanyCustomer?: ChainCompanyCustomer;
    client?: ChainOrganization;
    /**
     * Sac number. Relevant when outputs repacked
     */
    sacNumber?: number;
    /**
     * Id of the quote order that triggered the this order
     */
    triggerOrderIds?: Array<string>;
    /**
     * Calculated property, depending on whether total quantity differs from fullfiled quantity.
     */
    isOpenOrder?: any;
    /**
     * Quote facility - the facility to which a quote is made
     */
    quoteFacilityId?: string;
    /**
     * Quote organization id. Set automatically from quoteFacilityId while saving.
     */
    quoteOrganizationId?: string;
    /**
     * Input orders
     */
    inputOrders?: Array<ChainStockOrder>;
    pricePerUnitForOwner?: number;
    pricePerUnitForBuyer?: number;
    exchangeRateAtBuyer?: number;
    pricePerUnitForEndCustomer?: number;
    exchangeRateAtEndCustomer?: number;
    cuppingResult?: string;
    cuppingGrade?: string;
    cuppingFlavour?: string;
    roastingDate?: string;
    roastingProfile?: string;
    shipperDetails?: string;
    carrierDetails?: string;
    portOfLoading?: string;
    portOfDischarge?: string;
    locationOfEndDelivery?: string;
    dateOfEndDelivery?: string;
    requiredWomensCoffee?: boolean;
    requiredQuality?: ChainGradeAbbreviation;
    requiredQualityId?: string;
    shippedAtDateFromOriginPort?: string;
    arrivedAtDateToDestinationPort?: string;
    productOrder?: ChainProductOrder;
    /**
     * Product order matching triggerOrderId. Read only.
     */
    triggerOrders?: Array<ChainStockOrder>;
    /**
     * List of orders that have been trigerred by this order. Read only
     */
    triggeredOrders?: Array<ChainStockOrder>;
    quoteFacility?: ChainFacility;
    quoteOrganization?: ChainOrganization;
    organization?: ChainOrganization;
}

/**
 * Namespace for property- and property-value-enumerations of ChainStockOrder.
 */
export namespace ChainStockOrder {
    /**
     * All properties of ChainStockOrder.
     */
    export enum Properties {
        docType = 'docType',
        _id = '_id',
        _rev = '_rev',
        /**
         * Timestamp of creation
         */
        created = 'created',
        /**
         * Timestamp of last change
         */
        lastChange = 'lastChange',
        /**
         * Id of user that created the document.
         */
        userCreatedId = 'userCreatedId',
        /**
         * Id of user that changed the document.
         */
        userChangedId = 'userChangedId',
        /**
         * Official creation date/time
         */
        formalCreationTime = 'formalCreationTime',
        /**
         * Human readable identifier
         */
        identifier = 'identifier',
        /**
         * Id of the user creator
         */
        creatorId = 'creatorId',
        /**
         * Representative of producer user customer. E.g. collector. Relevant only for order type: PURCHASE_ORDER
         */
        representativeOfProducerUserCustomerId = 'representativeOfProducerUserCustomerId',
        /**
         * Id of the person who has produced the entry. Relevant only for order type: PURCHASE_ORDER
         */
        producerUserCustomerId = 'producerUserCustomerId',
        productionLocation = 'productionLocation',
        certificates = 'certificates',
        /**
         * Consumer company customer. Relevant for order type: SALES_ORDER
         */
        consumerCompanyCustomerId = 'consumerCompanyCustomerId',
        /**
         * Reference to the semi product
         */
        semiProductId = 'semiProductId',
        /**
         * Facility Id where product unit is located
         */
        facilityId = 'facilityId',
        /**
         * Calculated from facility during insert.
         */
        organizationId = 'organizationId',
        /**
         * Quantity unit tipe. Calculated automatically from semiProduct at insertion.
         */
        measurementUnitType = 'measurementUnitType',
        /**
         * Total ordered quantity
         */
        totalQuantity = 'totalQuantity',
        /**
         * Fulfilled quantity (<= totalQuantity)
         */
        fullfilledQuantity = 'fullfilledQuantity',
        /**
         * Available quantity ( <= fulfilledQuantity)
         */
        availableQuantity = 'availableQuantity',
        /**
         * '1' if availableQuantity > 0. Set automatically.
         */
        isAvailable = 'isAvailable',
        /**
         * Production date
         */
        productionDate = 'productionDate',
        /**
         * Expiry date
         */
        expiryDate = 'expiryDate',
        /**
         * Estimated delivery date
         */
        estimatedDeliveryDate = 'estimatedDeliveryDate',
        /**
         * Preferred delivery date.
         */
        deliveryTime = 'deliveryTime',
        /**
         * Order which triggered creation of the product unit
         */
        orderId = 'orderId',
        /**
         * Global order id. Global order is initial order that triggers other orders in value chain.
         */
        globalOrderId = 'globalOrderId',
        documentRequirements = 'documentRequirements',
        /**
         * Price per unit (purchase price). Relevant for type PURCHASE_ORDER. Irrelevant for PROCESSING_ORDER. Should be calculated from input transactions for SALES_ORDER and GENERAL_ORDER
         */
        pricePerUnit = 'pricePerUnit',
        /**
         * Sales price per unit.
         */
        salesPricePerUnit = 'salesPricePerUnit',
        /**
         * Purchase currency. Currency code according to ISO 4217 for pricePerUnit. Relevant for all orders. In case of order type SALES_ORDER it denotes the price of sale to the final customer.
         */
        currency = 'currency',
        /**
         * Sales currency. Currency code according to ISO 4217 for pricePerUnit
         */
        salesCurrency = 'salesCurrency',
        /**
         * Is it a purchase order? Depricated, should use orderType: PURCHASE_ORDER
         */
        isPurchaseOrder = 'isPurchaseOrder',
        /**
         * Order type. - PURCHASE_ORDER - created during purchase of coffee from farmers. No input transactions, allows output transactions. - PROCESSING_ORDER - created as a result of a processing transaction. No input transactions, allows output transactions. - SALES_ORDER - created on behalf of final customer. Filled by input transactions. No output transactions allowed. - GENERAL - general (transport) order in the middle of the value chain. Allows input and output transactions. - TRANSFER ORDER - generated through transfer processing actions
         */
        orderType = 'orderType',
        /**
         * Grade abbreviaton id
         */
        gradeAbbreviationId = 'gradeAbbreviationId',
        /**
         * Internal lot number
         */
        internalLotNumber = 'internalLotNumber',
        /**
         * External lot number
         */
        lotNumber = 'lotNumber',
        /**
         * Screen size
         */
        screenSize = 'screenSize',
        /**
         * Comments
         */
        comments = 'comments',
        actionType = 'actionType',
        /**
         * Share between 0 and 1 (100%)
         */
        womenShare = 'womenShare',
        /**
         * Cost (to be paid, calculated automatically)
         */
        cost = 'cost',
        /**
         * Amount paid (calculated automatically)
         */
        paid = 'paid',
        /**
         * Balance to be paid (calculated automatically)
         */
        balance = 'balance',
        semiProduct = 'semiProduct',
        facility = 'facility',
        representativeOfProducerUserCustomer = 'representativeOfProducerUserCustomer',
        producerUserCustomer = 'producerUserCustomer',
        /**
         * Input transactions for stock order. Read only.
         */
        inputTransactions = 'inputTransactions',
        /**
         * Output transactions for stock order. Read only.
         */
        outputTransactions = 'outputTransactions',
        /**
         * Lot label
         */
        lotLabel = 'lotLabel',
        /**
         * Start of drying
         */
        startOfDrying = 'startOfDrying',
        /**
         * Client's name (ID) TODO: add foreign key, when ApiProductCompany is defined
         */
        clientId = 'clientId',
        /**
         * Flavour profile
         */
        flavourProfile = 'flavourProfile',
        /**
         * Processing action id. The order cannot be deleted directly through API, if this is not null.
         */
        processingActionId = 'processingActionId',
        processingAction = 'processingAction',
        gradeAbbreviation = 'gradeAbbreviation',
        /**
         * Reference to processing order
         */
        processingOrderId = 'processingOrderId',
        processingOrder = 'processingOrder',
        preferredWayOfPayment = 'preferredWayOfPayment',
        consumerCompanyCustomer = 'consumerCompanyCustomer',
        client = 'client',
        /**
         * Sac number. Relevant when outputs repacked
         */
        sacNumber = 'sacNumber',
        /**
         * Id of the quote order that triggered the this order
         */
        triggerOrderIds = 'triggerOrderIds',
        /**
         * Calculated property, depending on whether total quantity differs from fullfiled quantity.
         */
        isOpenOrder = 'isOpenOrder',
        /**
         * Quote facility - the facility to which a quote is made
         */
        quoteFacilityId = 'quoteFacilityId',
        /**
         * Quote organization id. Set automatically from quoteFacilityId while saving.
         */
        quoteOrganizationId = 'quoteOrganizationId',
        /**
         * Input orders
         */
        inputOrders = 'inputOrders',
        pricePerUnitForOwner = 'pricePerUnitForOwner',
        pricePerUnitForBuyer = 'pricePerUnitForBuyer',
        exchangeRateAtBuyer = 'exchangeRateAtBuyer',
        pricePerUnitForEndCustomer = 'pricePerUnitForEndCustomer',
        exchangeRateAtEndCustomer = 'exchangeRateAtEndCustomer',
        cuppingResult = 'cuppingResult',
        cuppingGrade = 'cuppingGrade',
        cuppingFlavour = 'cuppingFlavour',
        roastingDate = 'roastingDate',
        roastingProfile = 'roastingProfile',
        shipperDetails = 'shipperDetails',
        carrierDetails = 'carrierDetails',
        portOfLoading = 'portOfLoading',
        portOfDischarge = 'portOfDischarge',
        locationOfEndDelivery = 'locationOfEndDelivery',
        dateOfEndDelivery = 'dateOfEndDelivery',
        requiredWomensCoffee = 'requiredWomensCoffee',
        requiredQuality = 'requiredQuality',
        requiredQualityId = 'requiredQualityId',
        shippedAtDateFromOriginPort = 'shippedAtDateFromOriginPort',
        arrivedAtDateToDestinationPort = 'arrivedAtDateToDestinationPort',
        productOrder = 'productOrder',
        /**
         * Product order matching triggerOrderId. Read only.
         */
        triggerOrders = 'triggerOrders',
        /**
         * List of orders that have been trigerred by this order. Read only
         */
        triggeredOrders = 'triggeredOrders',
        quoteFacility = 'quoteFacility',
        quoteOrganization = 'quoteOrganization',
        organization = 'organization'
    }


    export function formMetadata() {
        return  {
            metadata: formMetadata,
            classname: 'ChainStockOrder',
            vars: [
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'docType',
                    classname: 'ChainStockOrder',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: '_id',
                    classname: 'ChainStockOrder',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: '_rev',
                    classname: 'ChainStockOrder',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'created',
                    classname: 'ChainStockOrder',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'lastChange',
                    classname: 'ChainStockOrder',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'userCreatedId',
                    classname: 'ChainStockOrder',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'userChangedId',
                    classname: 'ChainStockOrder',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'formalCreationTime',
                    classname: 'ChainStockOrder',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'identifier',
                    classname: 'ChainStockOrder',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'creatorId',
                    classname: 'ChainStockOrder',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'representativeOfProducerUserCustomerId',
                    classname: 'ChainStockOrder',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'producerUserCustomerId',
                    classname: 'ChainStockOrder',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    metadata: ChainLocation.formMetadata,
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'productionLocation',
                    classname: 'ChainStockOrder',
                    dataType: 'ChainLocation',
                    isPrimitiveType: false,
                    isListContainer: false,
                    complexType: 'ChainLocation'
                },
                {
                    metadata: ChainCertification.formMetadata,
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'certificates',
                    classname: 'ChainStockOrder',
                    dataType: 'Array&lt;ChainCertification&gt;',
                    isPrimitiveType: false,
                    isListContainer: true,
                    complexType: 'ChainCertification'
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'consumerCompanyCustomerId',
                    classname: 'ChainStockOrder',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: true,
                    name: 'semiProductId',
                    classname: 'ChainStockOrder',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: true,
                    name: 'facilityId',
                    classname: 'ChainStockOrder',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'organizationId',
                    classname: 'ChainStockOrder',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'measurementUnitType',
                    classname: 'ChainStockOrder',
                    dataType: 'any',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: true,
                    name: 'totalQuantity',
                    classname: 'ChainStockOrder',
                    dataType: 'number',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: true,
                    name: 'fullfilledQuantity',
                    classname: 'ChainStockOrder',
                    dataType: 'number',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: true,
                    name: 'availableQuantity',
                    classname: 'ChainStockOrder',
                    dataType: 'number',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'isAvailable',
                    classname: 'ChainStockOrder',
                    dataType: 'any',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: true,
                    name: 'productionDate',
                    classname: 'ChainStockOrder',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'expiryDate',
                    classname: 'ChainStockOrder',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'estimatedDeliveryDate',
                    classname: 'ChainStockOrder',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'deliveryTime',
                    classname: 'ChainStockOrder',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'orderId',
                    classname: 'ChainStockOrder',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'globalOrderId',
                    classname: 'ChainStockOrder',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    metadata: ChainDocumentRequirementList.formMetadata,
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'documentRequirements',
                    classname: 'ChainStockOrder',
                    dataType: 'ChainDocumentRequirementList',
                    isPrimitiveType: false,
                    isListContainer: false,
                    complexType: 'ChainDocumentRequirementList'
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'pricePerUnit',
                    classname: 'ChainStockOrder',
                    dataType: 'number',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'salesPricePerUnit',
                    classname: 'ChainStockOrder',
                    dataType: 'number',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'currency',
                    classname: 'ChainStockOrder',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'salesCurrency',
                    classname: 'ChainStockOrder',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'isPurchaseOrder',
                    classname: 'ChainStockOrder',
                    dataType: 'boolean',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'orderType',
                    classname: 'ChainStockOrder',
                    dataType: 'any',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'gradeAbbreviationId',
                    classname: 'ChainStockOrder',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'internalLotNumber',
                    classname: 'ChainStockOrder',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'lotNumber',
                    classname: 'ChainStockOrder',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'screenSize',
                    classname: 'ChainStockOrder',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'comments',
                    classname: 'ChainStockOrder',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    metadata: ChainActionType.formMetadata,
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'actionType',
                    classname: 'ChainStockOrder',
                    dataType: 'ChainActionType',
                    isPrimitiveType: false,
                    isListContainer: false,
                    complexType: 'ChainActionType'
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'womenShare',
                    classname: 'ChainStockOrder',
                    dataType: 'number',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'cost',
                    classname: 'ChainStockOrder',
                    dataType: 'number',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'paid',
                    classname: 'ChainStockOrder',
                    dataType: 'number',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'balance',
                    classname: 'ChainStockOrder',
                    dataType: 'number',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    metadata: ChainSemiProduct.formMetadata,
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'semiProduct',
                    classname: 'ChainStockOrder',
                    dataType: 'ChainSemiProduct',
                    isPrimitiveType: false,
                    isListContainer: false,
                    complexType: 'ChainSemiProduct'
                },
                {
                    metadata: ChainFacility.formMetadata,
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'facility',
                    classname: 'ChainStockOrder',
                    dataType: 'ChainFacility',
                    isPrimitiveType: false,
                    isListContainer: false,
                    complexType: 'ChainFacility'
                },
                {
                    metadata: ChainUserCustomer.formMetadata,
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'representativeOfProducerUserCustomer',
                    classname: 'ChainStockOrder',
                    dataType: 'ChainUserCustomer',
                    isPrimitiveType: false,
                    isListContainer: false,
                    complexType: 'ChainUserCustomer'
                },
                {
                    metadata: ChainUserCustomer.formMetadata,
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'producerUserCustomer',
                    classname: 'ChainStockOrder',
                    dataType: 'ChainUserCustomer',
                    isPrimitiveType: false,
                    isListContainer: false,
                    complexType: 'ChainUserCustomer'
                },
                {
                    metadata: ChainTransaction.formMetadata,
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'inputTransactions',
                    classname: 'ChainStockOrder',
                    dataType: 'Array&lt;ChainTransaction&gt;',
                    isPrimitiveType: false,
                    isListContainer: true,
                    complexType: 'ChainTransaction'
                },
                {
                    metadata: ChainTransaction.formMetadata,
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'outputTransactions',
                    classname: 'ChainStockOrder',
                    dataType: 'Array&lt;ChainTransaction&gt;',
                    isPrimitiveType: false,
                    isListContainer: true,
                    complexType: 'ChainTransaction'
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'lotLabel',
                    classname: 'ChainStockOrder',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'startOfDrying',
                    classname: 'ChainStockOrder',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'clientId',
                    classname: 'ChainStockOrder',
                    dataType: 'number',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'flavourProfile',
                    classname: 'ChainStockOrder',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'processingActionId',
                    classname: 'ChainStockOrder',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    metadata: ChainProcessingAction.formMetadata,
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'processingAction',
                    classname: 'ChainStockOrder',
                    dataType: 'ChainProcessingAction',
                    isPrimitiveType: false,
                    isListContainer: false,
                    complexType: 'ChainProcessingAction'
                },
                {
                    metadata: ChainGradeAbbreviation.formMetadata,
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'gradeAbbreviation',
                    classname: 'ChainStockOrder',
                    dataType: 'ChainGradeAbbreviation',
                    isPrimitiveType: false,
                    isListContainer: false,
                    complexType: 'ChainGradeAbbreviation'
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'processingOrderId',
                    classname: 'ChainStockOrder',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    metadata: ChainProcessingOrder.formMetadata,
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'processingOrder',
                    classname: 'ChainStockOrder',
                    dataType: 'ChainProcessingOrder',
                    isPrimitiveType: false,
                    isListContainer: false,
                    complexType: 'ChainProcessingOrder'
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'preferredWayOfPayment',
                    classname: 'ChainStockOrder',
                    dataType: 'any',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    metadata: ChainCompanyCustomer.formMetadata,
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'consumerCompanyCustomer',
                    classname: 'ChainStockOrder',
                    dataType: 'ChainCompanyCustomer',
                    isPrimitiveType: false,
                    isListContainer: false,
                    complexType: 'ChainCompanyCustomer'
                },
                {
                    metadata: ChainOrganization.formMetadata,
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'client',
                    classname: 'ChainStockOrder',
                    dataType: 'ChainOrganization',
                    isPrimitiveType: false,
                    isListContainer: false,
                    complexType: 'ChainOrganization'
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'sacNumber',
                    classname: 'ChainStockOrder',
                    dataType: 'number',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'triggerOrderIds',
                    classname: 'ChainStockOrder',
                    dataType: 'Array&lt;string&gt;',
                    isPrimitiveType: true,
                    isListContainer: true,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'isOpenOrder',
                    classname: 'ChainStockOrder',
                    dataType: 'any',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'quoteFacilityId',
                    classname: 'ChainStockOrder',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'quoteOrganizationId',
                    classname: 'ChainStockOrder',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    metadata: ChainStockOrder.formMetadata,
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'inputOrders',
                    classname: 'ChainStockOrder',
                    dataType: 'Array&lt;ChainStockOrder&gt;',
                    isPrimitiveType: false,
                    isListContainer: true,
                    complexType: 'ChainStockOrder'
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'pricePerUnitForOwner',
                    classname: 'ChainStockOrder',
                    dataType: 'number',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'pricePerUnitForBuyer',
                    classname: 'ChainStockOrder',
                    dataType: 'number',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'exchangeRateAtBuyer',
                    classname: 'ChainStockOrder',
                    dataType: 'number',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'pricePerUnitForEndCustomer',
                    classname: 'ChainStockOrder',
                    dataType: 'number',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'exchangeRateAtEndCustomer',
                    classname: 'ChainStockOrder',
                    dataType: 'number',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'cuppingResult',
                    classname: 'ChainStockOrder',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'cuppingGrade',
                    classname: 'ChainStockOrder',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'cuppingFlavour',
                    classname: 'ChainStockOrder',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'roastingDate',
                    classname: 'ChainStockOrder',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'roastingProfile',
                    classname: 'ChainStockOrder',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'shipperDetails',
                    classname: 'ChainStockOrder',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'carrierDetails',
                    classname: 'ChainStockOrder',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'portOfLoading',
                    classname: 'ChainStockOrder',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'portOfDischarge',
                    classname: 'ChainStockOrder',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'locationOfEndDelivery',
                    classname: 'ChainStockOrder',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'dateOfEndDelivery',
                    classname: 'ChainStockOrder',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'requiredWomensCoffee',
                    classname: 'ChainStockOrder',
                    dataType: 'boolean',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    metadata: ChainGradeAbbreviation.formMetadata,
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'requiredQuality',
                    classname: 'ChainStockOrder',
                    dataType: 'ChainGradeAbbreviation',
                    isPrimitiveType: false,
                    isListContainer: false,
                    complexType: 'ChainGradeAbbreviation'
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'requiredQualityId',
                    classname: 'ChainStockOrder',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'shippedAtDateFromOriginPort',
                    classname: 'ChainStockOrder',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'arrivedAtDateToDestinationPort',
                    classname: 'ChainStockOrder',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    metadata: ChainProductOrder.formMetadata,
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'productOrder',
                    classname: 'ChainStockOrder',
                    dataType: 'ChainProductOrder',
                    isPrimitiveType: false,
                    isListContainer: false,
                    complexType: 'ChainProductOrder'
                },
                {
                    metadata: ChainStockOrder.formMetadata,
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'triggerOrders',
                    classname: 'ChainStockOrder',
                    dataType: 'Array&lt;ChainStockOrder&gt;',
                    isPrimitiveType: false,
                    isListContainer: true,
                    complexType: 'ChainStockOrder'
                },
                {
                    metadata: ChainStockOrder.formMetadata,
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'triggeredOrders',
                    classname: 'ChainStockOrder',
                    dataType: 'Array&lt;ChainStockOrder&gt;',
                    isPrimitiveType: false,
                    isListContainer: true,
                    complexType: 'ChainStockOrder'
                },
                {
                    metadata: ChainFacility.formMetadata,
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'quoteFacility',
                    classname: 'ChainStockOrder',
                    dataType: 'ChainFacility',
                    isPrimitiveType: false,
                    isListContainer: false,
                    complexType: 'ChainFacility'
                },
                {
                    metadata: ChainOrganization.formMetadata,
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'quoteOrganization',
                    classname: 'ChainStockOrder',
                    dataType: 'ChainOrganization',
                    isPrimitiveType: false,
                    isListContainer: false,
                    complexType: 'ChainOrganization'
                },
                {
                    metadata: ChainOrganization.formMetadata,
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'organization',
                    classname: 'ChainStockOrder',
                    dataType: 'ChainOrganization',
                    isPrimitiveType: false,
                    isListContainer: false,
                    complexType: 'ChainOrganization'
                },
            ],
            validators: {
                docType: [
                ],
                _id: [
                ],
                _rev: [
                ],
                created: [
                ],
                lastChange: [
                ],
                userCreatedId: [
                ],
                userChangedId: [
                ],
                formalCreationTime: [
                ],
                identifier: [
                ],
                creatorId: [
                ],
                representativeOfProducerUserCustomerId: [
                ],
                producerUserCustomerId: [
                ],
                productionLocation: [
                ],
                certificates: [
                ],
                consumerCompanyCustomerId: [
                ],
                semiProductId: [
                        ['required'],
                ],
                facilityId: [
                        ['required'],
                ],
                organizationId: [
                ],
                measurementUnitType: [
                ],
                totalQuantity: [
                        ['required'],
                ],
                fullfilledQuantity: [
                        ['required'],
                ],
                availableQuantity: [
                        ['required'],
                ],
                isAvailable: [
                ],
                productionDate: [
                        ['required'],
                ],
                expiryDate: [
                ],
                estimatedDeliveryDate: [
                ],
                deliveryTime: [
                ],
                orderId: [
                ],
                globalOrderId: [
                ],
                documentRequirements: [
                ],
                pricePerUnit: [
                ],
                salesPricePerUnit: [
                ],
                currency: [
                ],
                salesCurrency: [
                ],
                isPurchaseOrder: [
                ],
                orderType: [
                ],
                gradeAbbreviationId: [
                ],
                internalLotNumber: [
                ],
                lotNumber: [
                ],
                screenSize: [
                ],
                comments: [
                ],
                actionType: [
                ],
                womenShare: [
                ],
                cost: [
                ],
                paid: [
                ],
                balance: [
                ],
                semiProduct: [
                ],
                facility: [
                ],
                representativeOfProducerUserCustomer: [
                ],
                producerUserCustomer: [
                ],
                inputTransactions: [
                ],
                outputTransactions: [
                ],
                lotLabel: [
                ],
                startOfDrying: [
                ],
                clientId: [
                ],
                flavourProfile: [
                ],
                processingActionId: [
                ],
                processingAction: [
                ],
                gradeAbbreviation: [
                ],
                processingOrderId: [
                ],
                processingOrder: [
                ],
                preferredWayOfPayment: [
                ],
                consumerCompanyCustomer: [
                ],
                client: [
                ],
                sacNumber: [
                ],
                triggerOrderIds: [
                ],
                isOpenOrder: [
                ],
                quoteFacilityId: [
                ],
                quoteOrganizationId: [
                ],
                inputOrders: [
                ],
                pricePerUnitForOwner: [
                ],
                pricePerUnitForBuyer: [
                ],
                exchangeRateAtBuyer: [
                ],
                pricePerUnitForEndCustomer: [
                ],
                exchangeRateAtEndCustomer: [
                ],
                cuppingResult: [
                ],
                cuppingGrade: [
                ],
                cuppingFlavour: [
                ],
                roastingDate: [
                ],
                roastingProfile: [
                ],
                shipperDetails: [
                ],
                carrierDetails: [
                ],
                portOfLoading: [
                ],
                portOfDischarge: [
                ],
                locationOfEndDelivery: [
                ],
                dateOfEndDelivery: [
                ],
                requiredWomensCoffee: [
                ],
                requiredQuality: [
                ],
                requiredQualityId: [
                ],
                shippedAtDateFromOriginPort: [
                ],
                arrivedAtDateToDestinationPort: [
                ],
                productOrder: [
                ],
                triggerOrders: [
                ],
                triggeredOrders: [
                ],
                quoteFacility: [
                ],
                quoteOrganization: [
                ],
                organization: [
                ],
            }
        }
    }

  // export const ChainStockOrderValidationScheme = {
  //     validators: [],
  //     fields: {
  //               docType: {
  //                   validators: []
  //               },
  //               _id: {
  //                   validators: []
  //               },
  //               _rev: {
  //                   validators: []
  //               },
  //               created: {
  //                   validators: []
  //               },
  //               lastChange: {
  //                   validators: []
  //               },
  //               userCreatedId: {
  //                   validators: []
  //               },
  //               userChangedId: {
  //                   validators: []
  //               },
  //               formalCreationTime: {
  //                   validators: []
  //               },
  //               identifier: {
  //                   validators: []
  //               },
  //               creatorId: {
  //                   validators: []
  //               },
  //               representativeOfProducerUserCustomerId: {
  //                   validators: []
  //               },
  //               producerUserCustomerId: {
  //                   validators: []
  //               },
  //               productionLocation: {
  //                   validators: []
  //               },
  //               certificates: {
  //                   validators: []
  //               },
  //               consumerCompanyCustomerId: {
  //                   validators: []
  //               },
  //               semiProductId: {
  //                   validators: []
  //               },
  //               facilityId: {
  //                   validators: []
  //               },
  //               organizationId: {
  //                   validators: []
  //               },
  //               measurementUnitType: {
  //                   validators: []
  //               },
  //               totalQuantity: {
  //                   validators: []
  //               },
  //               fullfilledQuantity: {
  //                   validators: []
  //               },
  //               availableQuantity: {
  //                   validators: []
  //               },
  //               isAvailable: {
  //                   validators: []
  //               },
  //               productionDate: {
  //                   validators: []
  //               },
  //               expiryDate: {
  //                   validators: []
  //               },
  //               estimatedDeliveryDate: {
  //                   validators: []
  //               },
  //               deliveryTime: {
  //                   validators: []
  //               },
  //               orderId: {
  //                   validators: []
  //               },
  //               globalOrderId: {
  //                   validators: []
  //               },
  //               documentRequirements: {
  //                   validators: []
  //               },
  //               pricePerUnit: {
  //                   validators: []
  //               },
  //               salesPricePerUnit: {
  //                   validators: []
  //               },
  //               currency: {
  //                   validators: []
  //               },
  //               salesCurrency: {
  //                   validators: []
  //               },
  //               isPurchaseOrder: {
  //                   validators: []
  //               },
  //               orderType: {
  //                   validators: []
  //               },
  //               gradeAbbreviationId: {
  //                   validators: []
  //               },
  //               internalLotNumber: {
  //                   validators: []
  //               },
  //               lotNumber: {
  //                   validators: []
  //               },
  //               screenSize: {
  //                   validators: []
  //               },
  //               comments: {
  //                   validators: []
  //               },
  //               actionType: {
  //                   validators: []
  //               },
  //               womenShare: {
  //                   validators: []
  //               },
  //               cost: {
  //                   validators: []
  //               },
  //               paid: {
  //                   validators: []
  //               },
  //               balance: {
  //                   validators: []
  //               },
  //               semiProduct: {
  //                   validators: []
  //               },
  //               facility: {
  //                   validators: []
  //               },
  //               representativeOfProducerUserCustomer: {
  //                   validators: []
  //               },
  //               producerUserCustomer: {
  //                   validators: []
  //               },
  //               inputTransactions: {
  //                   validators: []
  //               },
  //               outputTransactions: {
  //                   validators: []
  //               },
  //               lotLabel: {
  //                   validators: []
  //               },
  //               startOfDrying: {
  //                   validators: []
  //               },
  //               clientId: {
  //                   validators: []
  //               },
  //               flavourProfile: {
  //                   validators: []
  //               },
  //               processingActionId: {
  //                   validators: []
  //               },
  //               processingAction: {
  //                   validators: []
  //               },
  //               gradeAbbreviation: {
  //                   validators: []
  //               },
  //               processingOrderId: {
  //                   validators: []
  //               },
  //               processingOrder: {
  //                   validators: []
  //               },
  //               preferredWayOfPayment: {
  //                   validators: []
  //               },
  //               consumerCompanyCustomer: {
  //                   validators: []
  //               },
  //               client: {
  //                   validators: []
  //               },
  //               sacNumber: {
  //                   validators: []
  //               },
  //               triggerOrderIds: {
  //                   validators: []
  //               },
  //               isOpenOrder: {
  //                   validators: []
  //               },
  //               quoteFacilityId: {
  //                   validators: []
  //               },
  //               quoteOrganizationId: {
  //                   validators: []
  //               },
  //               inputOrders: {
  //                   validators: []
  //               },
  //               pricePerUnitForOwner: {
  //                   validators: []
  //               },
  //               pricePerUnitForBuyer: {
  //                   validators: []
  //               },
  //               exchangeRateAtBuyer: {
  //                   validators: []
  //               },
  //               pricePerUnitForEndCustomer: {
  //                   validators: []
  //               },
  //               exchangeRateAtEndCustomer: {
  //                   validators: []
  //               },
  //               cuppingResult: {
  //                   validators: []
  //               },
  //               cuppingGrade: {
  //                   validators: []
  //               },
  //               cuppingFlavour: {
  //                   validators: []
  //               },
  //               roastingDate: {
  //                   validators: []
  //               },
  //               roastingProfile: {
  //                   validators: []
  //               },
  //               shipperDetails: {
  //                   validators: []
  //               },
  //               carrierDetails: {
  //                   validators: []
  //               },
  //               portOfLoading: {
  //                   validators: []
  //               },
  //               portOfDischarge: {
  //                   validators: []
  //               },
  //               locationOfEndDelivery: {
  //                   validators: []
  //               },
  //               dateOfEndDelivery: {
  //                   validators: []
  //               },
  //               requiredWomensCoffee: {
  //                   validators: []
  //               },
  //               requiredQuality: {
  //                   validators: []
  //               },
  //               requiredQualityId: {
  //                   validators: []
  //               },
  //               shippedAtDateFromOriginPort: {
  //                   validators: []
  //               },
  //               arrivedAtDateToDestinationPort: {
  //                   validators: []
  //               },
  //               productOrder: {
  //                   validators: []
  //               },
  //               triggerOrders: {
  //                   validators: []
  //               },
  //               triggeredOrders: {
  //                   validators: []
  //               },
  //               quoteFacility: {
  //                   validators: []
  //               },
  //               quoteOrganization: {
  //                   validators: []
  //               },
  //               organization: {
  //                   validators: []
  //               },
  //     }
  // } as SimpleValidationScheme<ChainStockOrder>;


}


