/*
 * Copyright(c) 2009 - 2019 Abelium d.o.o.
 * Kajuhova 90, 1000 Ljubljana, Slovenia
 * All rights reserved
 * Copyright(c) 1995 - 2018 T-Systems Multimedia Solutions GmbH
 * Riesaer Str. 5, 01129 Dresden
 * All rights reserved.
 *
 * coffee-be
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the openapi-typescript-angular-generator.
 * https://github.com/alenabelium/openapi-typescript-angular-generator
 * Do not edit the class manually.
 */


import { ChainFacilityType } from './chainFacilityType';
import { ChainLocation } from './chainLocation';
import { ChainSemiProduct } from './chainSemiProduct';
import { ChainSemiProductPrice } from './chainSemiProductPrice';


/**
 * Each organization (ChainOrganization) may have several facilities. Facility is considered as a storage space for product units (ChainProductUnit). Transactions (ChainTransaction) run between facilities and are recorded by ChainTransaciton objects.
 */

export interface ChainFacility { 
    docType?: string;
    _id?: string;
    _rev?: string;
    /**
     * Timestamp of creation
     */
    created?: string;
    /**
     * Timestamp of last change
     */
    lastChange?: string;
    /**
     * Id of user that created the document.
     */
    userCreatedId?: string;
    /**
     * Id of user that changed the document.
     */
    userChangedId?: string;
    /**
     * Facility name
     */
    name: string;
    /**
     * Organization id
     */
    organizationId: string;
    facilityType?: ChainFacilityType;
    /**
     * Facility where cherries are gathered
     */
    isCollectionFacility?: boolean;
    /**
     * Whether anybody can list stock orders from this facility (facility intended for sale).
     */
    isPublic?: boolean;
    location?: ChainLocation;
    /**
     * Organization object. Set automatically on read. Ignored on write (not stored, obtained through organizationId)
     */
    organization?: any;
    /**
     * Allowable semi products
     */
    semiProducts?: Array<ChainSemiProduct>;
    /**
     * Allowable semi product ids
     */
    semiProductIds?: Array<string>;
    /**
     * Suggested semi-product prices
     */
    semiProductPrices?: Array<ChainSemiProductPrice>;
}

/**
 * Namespace for property- and property-value-enumerations of ChainFacility.
 */
export namespace ChainFacility {
    /**
     * All properties of ChainFacility.
     */
    export enum Properties {
        docType = 'docType',
        _id = '_id',
        _rev = '_rev',
        /**
         * Timestamp of creation
         */
        created = 'created',
        /**
         * Timestamp of last change
         */
        lastChange = 'lastChange',
        /**
         * Id of user that created the document.
         */
        userCreatedId = 'userCreatedId',
        /**
         * Id of user that changed the document.
         */
        userChangedId = 'userChangedId',
        /**
         * Facility name
         */
        name = 'name',
        /**
         * Organization id
         */
        organizationId = 'organizationId',
        facilityType = 'facilityType',
        /**
         * Facility where cherries are gathered
         */
        isCollectionFacility = 'isCollectionFacility',
        /**
         * Whether anybody can list stock orders from this facility (facility intended for sale).
         */
        isPublic = 'isPublic',
        location = 'location',
        /**
         * Organization object. Set automatically on read. Ignored on write (not stored, obtained through organizationId)
         */
        organization = 'organization',
        /**
         * Allowable semi products
         */
        semiProducts = 'semiProducts',
        /**
         * Allowable semi product ids
         */
        semiProductIds = 'semiProductIds',
        /**
         * Suggested semi-product prices
         */
        semiProductPrices = 'semiProductPrices'
    }


    export function formMetadata() {
        return  {
            metadata: formMetadata,
            classname: 'ChainFacility',
            vars: [
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'docType',
                    classname: 'ChainFacility',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: '_id',
                    classname: 'ChainFacility',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: '_rev',
                    classname: 'ChainFacility',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'created',
                    classname: 'ChainFacility',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'lastChange',
                    classname: 'ChainFacility',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'userCreatedId',
                    classname: 'ChainFacility',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'userChangedId',
                    classname: 'ChainFacility',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: true,
                    name: 'name',
                    classname: 'ChainFacility',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: true,
                    name: 'organizationId',
                    classname: 'ChainFacility',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    metadata: ChainFacilityType.formMetadata,
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'facilityType',
                    classname: 'ChainFacility',
                    dataType: 'ChainFacilityType',
                    isPrimitiveType: false,
                    isListContainer: false,
                    complexType: 'ChainFacilityType'
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'isCollectionFacility',
                    classname: 'ChainFacility',
                    dataType: 'boolean',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'isPublic',
                    classname: 'ChainFacility',
                    dataType: 'boolean',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    metadata: ChainLocation.formMetadata,
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'location',
                    classname: 'ChainFacility',
                    dataType: 'ChainLocation',
                    isPrimitiveType: false,
                    isListContainer: false,
                    complexType: 'ChainLocation'
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'organization',
                    classname: 'ChainFacility',
                    dataType: 'any',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    metadata: ChainSemiProduct.formMetadata,
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'semiProducts',
                    classname: 'ChainFacility',
                    dataType: 'Array&lt;ChainSemiProduct&gt;',
                    isPrimitiveType: false,
                    isListContainer: true,
                    complexType: 'ChainSemiProduct'
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'semiProductIds',
                    classname: 'ChainFacility',
                    dataType: 'Array&lt;string&gt;',
                    isPrimitiveType: true,
                    isListContainer: true,
                    complexType: ''
                },
                {
                    metadata: ChainSemiProductPrice.formMetadata,
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'semiProductPrices',
                    classname: 'ChainFacility',
                    dataType: 'Array&lt;ChainSemiProductPrice&gt;',
                    isPrimitiveType: false,
                    isListContainer: true,
                    complexType: 'ChainSemiProductPrice'
                },
            ],
            validators: {
                docType: [
                ],
                _id: [
                ],
                _rev: [
                ],
                created: [
                ],
                lastChange: [
                ],
                userCreatedId: [
                ],
                userChangedId: [
                ],
                name: [
                        ['required'],
                ],
                organizationId: [
                        ['required'],
                ],
                facilityType: [
                ],
                isCollectionFacility: [
                ],
                isPublic: [
                ],
                location: [
                ],
                organization: [
                ],
                semiProducts: [
                ],
                semiProductIds: [
                ],
                semiProductPrices: [
                ],
            }
        }
    }

  // export const ChainFacilityValidationScheme = {
  //     validators: [],
  //     fields: {
  //               docType: {
  //                   validators: []
  //               },
  //               _id: {
  //                   validators: []
  //               },
  //               _rev: {
  //                   validators: []
  //               },
  //               created: {
  //                   validators: []
  //               },
  //               lastChange: {
  //                   validators: []
  //               },
  //               userCreatedId: {
  //                   validators: []
  //               },
  //               userChangedId: {
  //                   validators: []
  //               },
  //               name: {
  //                   validators: []
  //               },
  //               organizationId: {
  //                   validators: []
  //               },
  //               facilityType: {
  //                   validators: []
  //               },
  //               isCollectionFacility: {
  //                   validators: []
  //               },
  //               isPublic: {
  //                   validators: []
  //               },
  //               location: {
  //                   validators: []
  //               },
  //               organization: {
  //                   validators: []
  //               },
  //               semiProducts: {
  //                   validators: []
  //               },
  //               semiProductIds: {
  //                   validators: []
  //               },
  //               semiProductPrices: {
  //                   validators: []
  //               },
  //     }
  // } as SimpleValidationScheme<ChainFacility>;


}


