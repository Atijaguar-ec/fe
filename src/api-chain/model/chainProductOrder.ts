/*
 * Copyright(c) 2009 - 2019 Abelium d.o.o.
 * Kajuhova 90, 1000 Ljubljana, Slovenia
 * All rights reserved
 * Copyright(c) 1995 - 2018 T-Systems Multimedia Solutions GmbH
 * Riesaer Str. 5, 01129 Dresden
 * All rights reserved.
 *
 * coffee-be
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the openapi-typescript-angular-generator.
 * https://github.com/alenabelium/openapi-typescript-angular-generator
 * Do not edit the class manually.
 */


import { ChainCompanyCustomer } from './chainCompanyCustomer';
import { ChainFacility } from './chainFacility';
import { ChainGradeAbbreviation } from './chainGradeAbbreviation';
import { ChainProcessingOrder } from './chainProcessingOrder';
import { ChainStockOrder } from './chainStockOrder';


/**
 * Represents a product order. Items in the order are
 */

export interface ChainProductOrder { 
    docType?: string;
    _id?: string;
    _rev?: string;
    dbKey?: string;
    mode__?: any;
    /**
     * Timestamp of creation
     */
    created?: string;
    /**
     * Timestamp of last change
     */
    lastChange?: string;
    /**
     * Id of user that created the document.
     */
    userCreatedId?: string;
    /**
     * Id of user that changed the document.
     */
    userChangedId?: string;
    /**
     * Order id.
     */
    id: string;
    /**
     * Facility to which order is ordered
     */
    facilityId: string;
    /**
     * Order delivery deadline
     */
    deliveryDeadline?: string;
    /**
     * Company customer id.
     */
    customerId?: string;
    /**
     * Indicator whether only women's coffee is required
     */
    requiredwomensOnly?: boolean;
    /**
     * Grade Id.
     */
    requiredGradeId?: string;
    /**
     * Read only list of ordered items. Used also on creation
     */
    items?: Array<ChainStockOrder>;
    facility?: ChainFacility;
    customer?: ChainCompanyCustomer;
    requiredGrade?: ChainGradeAbbreviation;
    /**
     * Processing orders. Insert only. Does not get saved. Used for creating orders.
     */
    processingOrders?: Array<ChainProcessingOrder>;
    /**
     * List of open orders
     */
    open?: boolean;
}

/**
 * Namespace for property- and property-value-enumerations of ChainProductOrder.
 */
export namespace ChainProductOrder {
    /**
     * All properties of ChainProductOrder.
     */
    export enum Properties {
        docType = 'docType',
        _id = '_id',
        _rev = '_rev',
        dbKey = 'dbKey',
        mode__ = 'mode__',
        /**
         * Timestamp of creation
         */
        created = 'created',
        /**
         * Timestamp of last change
         */
        lastChange = 'lastChange',
        /**
         * Id of user that created the document.
         */
        userCreatedId = 'userCreatedId',
        /**
         * Id of user that changed the document.
         */
        userChangedId = 'userChangedId',
        /**
         * Order id.
         */
        id = 'id',
        /**
         * Facility to which order is ordered
         */
        facilityId = 'facilityId',
        /**
         * Order delivery deadline
         */
        deliveryDeadline = 'deliveryDeadline',
        /**
         * Company customer id.
         */
        customerId = 'customerId',
        /**
         * Indicator whether only women's coffee is required
         */
        requiredwomensOnly = 'requiredwomensOnly',
        /**
         * Grade Id.
         */
        requiredGradeId = 'requiredGradeId',
        /**
         * Read only list of ordered items. Used also on creation
         */
        items = 'items',
        facility = 'facility',
        customer = 'customer',
        requiredGrade = 'requiredGrade',
        /**
         * Processing orders. Insert only. Does not get saved. Used for creating orders.
         */
        processingOrders = 'processingOrders',
        /**
         * List of open orders
         */
        open = 'open'
    }


    export function formMetadata() {
        return  {
            metadata: formMetadata,
            classname: 'ChainProductOrder',
            vars: [
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'docType',
                    classname: 'ChainProductOrder',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: '_id',
                    classname: 'ChainProductOrder',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: '_rev',
                    classname: 'ChainProductOrder',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'dbKey',
                    classname: 'ChainProductOrder',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'mode__',
                    classname: 'ChainProductOrder',
                    dataType: 'any',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'created',
                    classname: 'ChainProductOrder',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'lastChange',
                    classname: 'ChainProductOrder',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'userCreatedId',
                    classname: 'ChainProductOrder',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'userChangedId',
                    classname: 'ChainProductOrder',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: true,
                    name: 'id',
                    classname: 'ChainProductOrder',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: true,
                    name: 'facilityId',
                    classname: 'ChainProductOrder',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'deliveryDeadline',
                    classname: 'ChainProductOrder',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'customerId',
                    classname: 'ChainProductOrder',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'requiredwomensOnly',
                    classname: 'ChainProductOrder',
                    dataType: 'boolean',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'requiredGradeId',
                    classname: 'ChainProductOrder',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    metadata: ChainStockOrder.formMetadata,
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'items',
                    classname: 'ChainProductOrder',
                    dataType: 'Array&lt;ChainStockOrder&gt;',
                    isPrimitiveType: false,
                    isListContainer: true,
                    complexType: 'ChainStockOrder'
                },
                {
                    metadata: ChainFacility.formMetadata,
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'facility',
                    classname: 'ChainProductOrder',
                    dataType: 'ChainFacility',
                    isPrimitiveType: false,
                    isListContainer: false,
                    complexType: 'ChainFacility'
                },
                {
                    metadata: ChainCompanyCustomer.formMetadata,
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'customer',
                    classname: 'ChainProductOrder',
                    dataType: 'ChainCompanyCustomer',
                    isPrimitiveType: false,
                    isListContainer: false,
                    complexType: 'ChainCompanyCustomer'
                },
                {
                    metadata: ChainGradeAbbreviation.formMetadata,
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'requiredGrade',
                    classname: 'ChainProductOrder',
                    dataType: 'ChainGradeAbbreviation',
                    isPrimitiveType: false,
                    isListContainer: false,
                    complexType: 'ChainGradeAbbreviation'
                },
                {
                    metadata: ChainProcessingOrder.formMetadata,
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'processingOrders',
                    classname: 'ChainProductOrder',
                    dataType: 'Array&lt;ChainProcessingOrder&gt;',
                    isPrimitiveType: false,
                    isListContainer: true,
                    complexType: 'ChainProcessingOrder'
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'open',
                    classname: 'ChainProductOrder',
                    dataType: 'boolean',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
            ],
            validators: {
                docType: [
                ],
                _id: [
                ],
                _rev: [
                ],
                dbKey: [
                ],
                mode__: [
                ],
                created: [
                ],
                lastChange: [
                ],
                userCreatedId: [
                ],
                userChangedId: [
                ],
                id: [
                        ['required'],
                ],
                facilityId: [
                        ['required'],
                ],
                deliveryDeadline: [
                ],
                customerId: [
                ],
                requiredwomensOnly: [
                ],
                requiredGradeId: [
                ],
                items: [
                ],
                facility: [
                ],
                customer: [
                ],
                requiredGrade: [
                ],
                processingOrders: [
                ],
                open: [
                ],
            }
        }
    }

  // export const ChainProductOrderValidationScheme = {
  //     validators: [],
  //     fields: {
  //               docType: {
  //                   validators: []
  //               },
  //               _id: {
  //                   validators: []
  //               },
  //               _rev: {
  //                   validators: []
  //               },
  //               dbKey: {
  //                   validators: []
  //               },
  //               mode__: {
  //                   validators: []
  //               },
  //               created: {
  //                   validators: []
  //               },
  //               lastChange: {
  //                   validators: []
  //               },
  //               userCreatedId: {
  //                   validators: []
  //               },
  //               userChangedId: {
  //                   validators: []
  //               },
  //               id: {
  //                   validators: []
  //               },
  //               facilityId: {
  //                   validators: []
  //               },
  //               deliveryDeadline: {
  //                   validators: []
  //               },
  //               customerId: {
  //                   validators: []
  //               },
  //               requiredwomensOnly: {
  //                   validators: []
  //               },
  //               requiredGradeId: {
  //                   validators: []
  //               },
  //               items: {
  //                   validators: []
  //               },
  //               facility: {
  //                   validators: []
  //               },
  //               customer: {
  //                   validators: []
  //               },
  //               requiredGrade: {
  //                   validators: []
  //               },
  //               processingOrders: {
  //                   validators: []
  //               },
  //               open: {
  //                   validators: []
  //               },
  //     }
  // } as SimpleValidationScheme<ChainProductOrder>;


}


