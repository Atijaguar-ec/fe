/*
 * Copyright(c) 2009 - 2019 Abelium d.o.o.
 * Kajuhova 90, 1000 Ljubljana, Slovenia
 * All rights reserved
 * Copyright(c) 1995 - 2018 T-Systems Multimedia Solutions GmbH
 * Riesaer Str. 5, 01129 Dresden
 * All rights reserved.
 *
 * coffee-be
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the openapi-typescript-angular-generator.
 * https://github.com/alenabelium/openapi-typescript-angular-generator
 * Do not edit the class manually.
 */


import { ChainFileInfo } from './chainFileInfo';


/**
 * Definition of an entry field
 */

export interface FieldDefinition { 
    /**
     * Label of an entry field
     */
    label: string;
    /**
     * Field type (data taype)
     */
    type: FieldDefinition.TypeEnum;
    /**
     * Field is required or not
     */
    required?: boolean;
    /**
     * Field is mandatory for creation.
     */
    mandatory?: boolean;
    /**
     * Field is required if related to quote order.
     */
    requiredOnQuote?: boolean;
    /**
     * String value of the field, if the type is 'text', 'date' or 'timestamp'
     */
    stringValue?: string;
    /**
     * Numeric value if the type is 'number'
     */
    numericValue?: number;
    /**
     * Object value for type 'object'
     */
    objectValue?: any;
    /**
     * Number of files if the type is 'file'. For unlimited number use 'any'.
     */
    fileMultiplicity?: any;
    /**
     * List of files (ChainFileInfo)
     */
    files?: Array<ChainFileInfo>;
}

/**
 * Namespace for property- and property-value-enumerations of FieldDefinition.
 */
export namespace FieldDefinition {
    /**
     * All properties of FieldDefinition.
     */
    export enum Properties {
        /**
         * Label of an entry field
         */
        label = 'label',
        /**
         * Field type (data taype)
         */
        type = 'type',
        /**
         * Field is required or not
         */
        required = 'required',
        /**
         * Field is mandatory for creation.
         */
        mandatory = 'mandatory',
        /**
         * Field is required if related to quote order.
         */
        requiredOnQuote = 'requiredOnQuote',
        /**
         * String value of the field, if the type is 'text', 'date' or 'timestamp'
         */
        stringValue = 'stringValue',
        /**
         * Numeric value if the type is 'number'
         */
        numericValue = 'numericValue',
        /**
         * Object value for type 'object'
         */
        objectValue = 'objectValue',
        /**
         * Number of files if the type is 'file'. For unlimited number use 'any'.
         */
        fileMultiplicity = 'fileMultiplicity',
        /**
         * List of files (ChainFileInfo)
         */
        files = 'files'
    }

    /**
     * All possible values of type.
     */
    export enum TypeEnum {
        String = 'string',
        Text = 'text',
        Number = 'number',
        Integer = 'integer',
        Date = 'date',
        Object = 'object',
        Array = 'array',
        Price = 'price',
        ExchangeRate = 'exchange_rate',
        Timestamp = 'timestamp',
        File = 'file'
    }


    export function formMetadata() {
        return  {
            metadata: formMetadata,
            classname: 'FieldDefinition',
            vars: [
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: true,
                    name: 'label',
                    classname: 'FieldDefinition',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: true,
                    datatypeWithEnum: 'FieldDefinition.TypeEnum',
                    required: true,
                    name: 'type',
                    classname: 'FieldDefinition',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'required',
                    classname: 'FieldDefinition',
                    dataType: 'boolean',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'mandatory',
                    classname: 'FieldDefinition',
                    dataType: 'boolean',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'requiredOnQuote',
                    classname: 'FieldDefinition',
                    dataType: 'boolean',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'stringValue',
                    classname: 'FieldDefinition',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'numericValue',
                    classname: 'FieldDefinition',
                    dataType: 'number',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'objectValue',
                    classname: 'FieldDefinition',
                    dataType: 'any',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'fileMultiplicity',
                    classname: 'FieldDefinition',
                    dataType: 'any',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    metadata: ChainFileInfo.formMetadata,
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'files',
                    classname: 'FieldDefinition',
                    dataType: 'Array&lt;ChainFileInfo&gt;',
                    isPrimitiveType: false,
                    isListContainer: true,
                    complexType: 'ChainFileInfo'
                },
            ],
            validators: {
                label: [
                        ['required'],
                ],
                type: [
                        ['required'],
                ],
                required: [
                ],
                mandatory: [
                ],
                requiredOnQuote: [
                ],
                stringValue: [
                ],
                numericValue: [
                ],
                objectValue: [
                ],
                fileMultiplicity: [
                ],
                files: [
                ],
            }
        }
    }

  // export const FieldDefinitionValidationScheme = {
  //     validators: [],
  //     fields: {
  //               label: {
  //                   validators: []
  //               },
  //               type: {
  //                   validators: []
  //               },
  //               required: {
  //                   validators: []
  //               },
  //               mandatory: {
  //                   validators: []
  //               },
  //               requiredOnQuote: {
  //                   validators: []
  //               },
  //               stringValue: {
  //                   validators: []
  //               },
  //               numericValue: {
  //                   validators: []
  //               },
  //               objectValue: {
  //                   validators: []
  //               },
  //               fileMultiplicity: {
  //                   validators: []
  //               },
  //               files: {
  //                   validators: []
  //               },
  //     }
  // } as SimpleValidationScheme<FieldDefinition>;


}


