/*
 * Copyright(c) 2009 - 2019 Abelium d.o.o.
 * Kajuhova 90, 1000 Ljubljana, Slovenia
 * All rights reserved
 * Copyright(c) 1995 - 2018 T-Systems Multimedia Solutions GmbH
 * Riesaer Str. 5, 01129 Dresden
 * All rights reserved.
 *
 * coffee-be
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the openapi-typescript-angular-generator.
 * https://github.com/alenabelium/openapi-typescript-angular-generator
 * Do not edit the class manually.
 */


import { ApiDocument } from './apiDocument';
import { ApiProcess } from './apiProcess';
import { ApiProductLabelValues } from './apiProductLabelValues';
import { ApiProductOrigin } from './apiProductOrigin';
import { ApiResponsibility } from './apiResponsibility';
import { ApiSustainability } from './apiSustainability';
import { ChainCompanyProductRole } from './chainCompanyProductRole';
import { ChainOrganization } from './chainOrganization';


/**
 * Represents general product definition of a product. Example: Coffee Angelique (without specific packaging, quantity, ...) It DOES NOT represent an example of a product unit one can buy (e.g. a type of product unit of 50g coffee bag of brand Angelique) It DOES NOT represent any particular product instance/shippment/bag ... (e.g. A particular 50g bag of brand Anguelique in some facility such that one can actually get it.) It only represents product description with core properties. Sellable (orderable) types of a product of this kind are described by the class ChainSemiProduct. Instances of semi products are described by ChainStockOrder.
 */

export interface ChainProduct { 
    docType?: string;
    _id?: string;
    _rev?: string;
    dbKey?: string;
    mode__?: ChainProduct.ModeEnum;
    /**
     * Timestamp of creation
     */
    created?: string;
    /**
     * Timestamp of last change
     */
    lastChange?: string;
    /**
     * Id of user that created the document.
     */
    userCreatedId?: string;
    /**
     * Id of user that changed the document.
     */
    userChangedId?: string;
    /**
     * ProductId from afApp database
     */
    id: number;
    /**
     * List of roles of companies on the product value chain
     */
    organizationRoles?: Array<ChainCompanyProductRole>;
    /**
     * af coffie company id
     */
    companyId?: number;
    /**
     * Chain organization id matching companyId, set automatically from companyId on read or write.
     */
    organizationId?: string;
    /**
     * Chain organization matching companyId, set automatically.
     */
    organization?: ChainOrganization;
    /**
     * product description
     */
    description?: string;
    /**
     * how to Use / Recipes - Describe the best way to use the product (e.g. recipes, how to apply the product...)
     */
    howToUse?: string;
    /**
     * ingredients - list the ingredients in the product and describe their properties
     */
    ingredients?: string;
    /**
     * Key Markets, market name - share number map
     */
    keyMarketsShare?: { [key: string]: number; };
    /**
     * labels
     */
    labels?: Array<ApiProductLabelValues>;
    /**
     * product name
     */
    name?: string;
    /**
     * nutritional Value - list the nutritional value of the product
     */
    nutritionalValue?: string;
    origin?: ApiProductOrigin;
    photo?: ApiDocument;
    process?: ApiProcess;
    responsibility?: ApiResponsibility;
    sustainability?: ApiSustainability;
}

/**
 * Namespace for property- and property-value-enumerations of ChainProduct.
 */
export namespace ChainProduct {
    /**
     * All properties of ChainProduct.
     */
    export enum Properties {
        docType = 'docType',
        _id = '_id',
        _rev = '_rev',
        dbKey = 'dbKey',
        mode__ = 'mode__',
        /**
         * Timestamp of creation
         */
        created = 'created',
        /**
         * Timestamp of last change
         */
        lastChange = 'lastChange',
        /**
         * Id of user that created the document.
         */
        userCreatedId = 'userCreatedId',
        /**
         * Id of user that changed the document.
         */
        userChangedId = 'userChangedId',
        /**
         * ProductId from afApp database
         */
        id = 'id',
        /**
         * List of roles of companies on the product value chain
         */
        organizationRoles = 'organizationRoles',
        /**
         * af coffie company id
         */
        companyId = 'companyId',
        /**
         * Chain organization id matching companyId, set automatically from companyId on read or write.
         */
        organizationId = 'organizationId',
        /**
         * Chain organization matching companyId, set automatically.
         */
        organization = 'organization',
        /**
         * product description
         */
        description = 'description',
        /**
         * how to Use / Recipes - Describe the best way to use the product (e.g. recipes, how to apply the product...)
         */
        howToUse = 'howToUse',
        /**
         * ingredients - list the ingredients in the product and describe their properties
         */
        ingredients = 'ingredients',
        /**
         * Key Markets, market name - share number map
         */
        keyMarketsShare = 'keyMarketsShare',
        /**
         * labels
         */
        labels = 'labels',
        /**
         * product name
         */
        name = 'name',
        /**
         * nutritional Value - list the nutritional value of the product
         */
        nutritionalValue = 'nutritionalValue',
        origin = 'origin',
        photo = 'photo',
        process = 'process',
        responsibility = 'responsibility',
        sustainability = 'sustainability'
    }

    /**
     * All possible values of mode__.
     */
    export enum ModeEnum {
        Insert = 'insert',
        InsertAsIs = 'insert_as_is',
        Update = 'update'
    }


    export function formMetadata() {
        return  {
            metadata: formMetadata,
            classname: 'ChainProduct',
            vars: [
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'docType',
                    classname: 'ChainProduct',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: '_id',
                    classname: 'ChainProduct',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: '_rev',
                    classname: 'ChainProduct',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'dbKey',
                    classname: 'ChainProduct',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: true,
                    datatypeWithEnum: 'ChainProduct.ModeEnum',
                    required: false,
                    name: 'mode__',
                    classname: 'ChainProduct',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'created',
                    classname: 'ChainProduct',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'lastChange',
                    classname: 'ChainProduct',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'userCreatedId',
                    classname: 'ChainProduct',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'userChangedId',
                    classname: 'ChainProduct',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: true,
                    name: 'id',
                    classname: 'ChainProduct',
                    dataType: 'number',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    metadata: ChainCompanyProductRole.formMetadata,
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'organizationRoles',
                    classname: 'ChainProduct',
                    dataType: 'Array&lt;ChainCompanyProductRole&gt;',
                    isPrimitiveType: false,
                    isListContainer: true,
                    complexType: 'ChainCompanyProductRole'
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'companyId',
                    classname: 'ChainProduct',
                    dataType: 'number',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'organizationId',
                    classname: 'ChainProduct',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    metadata: ChainOrganization.formMetadata,
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'organization',
                    classname: 'ChainProduct',
                    dataType: 'ChainOrganization',
                    isPrimitiveType: false,
                    isListContainer: false,
                    complexType: 'ChainOrganization'
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'description',
                    classname: 'ChainProduct',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'howToUse',
                    classname: 'ChainProduct',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'ingredients',
                    classname: 'ChainProduct',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'keyMarketsShare',
                    classname: 'ChainProduct',
                    dataType: '{ [key: string]: number; }',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    metadata: ApiProductLabelValues.formMetadata,
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'labels',
                    classname: 'ChainProduct',
                    dataType: 'Array&lt;ApiProductLabelValues&gt;',
                    isPrimitiveType: false,
                    isListContainer: true,
                    complexType: 'ApiProductLabelValues'
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'name',
                    classname: 'ChainProduct',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'nutritionalValue',
                    classname: 'ChainProduct',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    metadata: ApiProductOrigin.formMetadata,
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'origin',
                    classname: 'ChainProduct',
                    dataType: 'ApiProductOrigin',
                    isPrimitiveType: false,
                    isListContainer: false,
                    complexType: 'ApiProductOrigin'
                },
                {
                    metadata: ApiDocument.formMetadata,
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'photo',
                    classname: 'ChainProduct',
                    dataType: 'ApiDocument',
                    isPrimitiveType: false,
                    isListContainer: false,
                    complexType: 'ApiDocument'
                },
                {
                    metadata: ApiProcess.formMetadata,
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'process',
                    classname: 'ChainProduct',
                    dataType: 'ApiProcess',
                    isPrimitiveType: false,
                    isListContainer: false,
                    complexType: 'ApiProcess'
                },
                {
                    metadata: ApiResponsibility.formMetadata,
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'responsibility',
                    classname: 'ChainProduct',
                    dataType: 'ApiResponsibility',
                    isPrimitiveType: false,
                    isListContainer: false,
                    complexType: 'ApiResponsibility'
                },
                {
                    metadata: ApiSustainability.formMetadata,
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'sustainability',
                    classname: 'ChainProduct',
                    dataType: 'ApiSustainability',
                    isPrimitiveType: false,
                    isListContainer: false,
                    complexType: 'ApiSustainability'
                },
            ],
            validators: {
                docType: [
                ],
                _id: [
                ],
                _rev: [
                ],
                dbKey: [
                ],
                mode__: [
                ],
                created: [
                ],
                lastChange: [
                ],
                userCreatedId: [
                ],
                userChangedId: [
                ],
                id: [
                        ['required'],
                ],
                organizationRoles: [
                ],
                companyId: [
                ],
                organizationId: [
                ],
                organization: [
                ],
                description: [
                ],
                howToUse: [
                ],
                ingredients: [
                ],
                keyMarketsShare: [
                ],
                labels: [
                ],
                name: [
                ],
                nutritionalValue: [
                ],
                origin: [
                ],
                photo: [
                ],
                process: [
                ],
                responsibility: [
                ],
                sustainability: [
                ],
            }
        }
    }

  // export const ChainProductValidationScheme = {
  //     validators: [],
  //     fields: {
  //               docType: {
  //                   validators: []
  //               },
  //               _id: {
  //                   validators: []
  //               },
  //               _rev: {
  //                   validators: []
  //               },
  //               dbKey: {
  //                   validators: []
  //               },
  //               mode__: {
  //                   validators: []
  //               },
  //               created: {
  //                   validators: []
  //               },
  //               lastChange: {
  //                   validators: []
  //               },
  //               userCreatedId: {
  //                   validators: []
  //               },
  //               userChangedId: {
  //                   validators: []
  //               },
  //               id: {
  //                   validators: []
  //               },
  //               organizationRoles: {
  //                   validators: []
  //               },
  //               companyId: {
  //                   validators: []
  //               },
  //               organizationId: {
  //                   validators: []
  //               },
  //               organization: {
  //                   validators: []
  //               },
  //               description: {
  //                   validators: []
  //               },
  //               howToUse: {
  //                   validators: []
  //               },
  //               ingredients: {
  //                   validators: []
  //               },
  //               keyMarketsShare: {
  //                   validators: []
  //               },
  //               labels: {
  //                   validators: []
  //               },
  //               name: {
  //                   validators: []
  //               },
  //               nutritionalValue: {
  //                   validators: []
  //               },
  //               origin: {
  //                   validators: []
  //               },
  //               photo: {
  //                   validators: []
  //               },
  //               process: {
  //                   validators: []
  //               },
  //               responsibility: {
  //                   validators: []
  //               },
  //               sustainability: {
  //                   validators: []
  //               },
  //     }
  // } as SimpleValidationScheme<ChainProduct>;


}


