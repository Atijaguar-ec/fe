/*
 * Copyright(c) 2009 - 2019 Abelium d.o.o.
 * Kajuhova 90, 1000 Ljubljana, Slovenia
 * All rights reserved
 * Copyright(c) 1995 - 2018 T-Systems Multimedia Solutions GmbH
 * Riesaer Str. 5, 01129 Dresden
 * All rights reserved.
 *
 * coffee-be
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the openapi-typescript-angular-generator.
 * https://github.com/alenabelium/openapi-typescript-angular-generator
 * Do not edit the class manually.
 */


import { BankAccountInfo } from './bankAccountInfo';
import { ChainLocation } from './chainLocation';
import { ChainOrganization } from './chainOrganization';
import { ChainUserCustomerRole } from './chainUserCustomerRole';
import { ContactInfo } from './contactInfo';
import { FarmInfo } from './farmInfo';


/**
 * User (physical person) type customer
 */

export interface ChainUserCustomer { 
    docType?: string;
    _id?: string;
    _rev?: string;
    /**
     * Timestamp of creation
     */
    created?: string;
    /**
     * Timestamp of last change
     */
    lastChange?: string;
    /**
     * Id of user that created the document.
     */
    userCreatedId?: string;
    /**
     * Id of user that changed the document.
     */
    userChangedId?: string;
    /**
     * Customer id from af-coffee-ap database
     */
    id: number;
    /**
     * Product Id as in af-coffee database
     */
    productId: number;
    /**
     * Product id in chain database. If productId is given and organization with such id is in the database, then organizationId is ignored and set automatically.;
     */
    chainProductId?: string;
    /**
     * Company Id as in af-coffee database
     */
    companyId: number;
    /**
     * Organization id. If companyId is given and organization with such id is in the database, then organizationId is ignored and set automatically.;
     */
    organizationId?: string;
    /**
     * Name of the customer.
     */
    name?: string;
    /**
     * Surname of the customer;
     */
    surname: string;
    /**
     * Gender of the customer
     */
    gender: any;
    location?: ChainLocation;
    /**
     * Human readable customer identificator
     */
    customerId?: string;
    contact?: ContactInfo;
    farmInfo?: FarmInfo;
    /**
     * List of references to associations.
     */
    associationIds?: Array<string>;
    /**
     * List of references to cooperatives (producers) and their roles
     */
    cooperativeIdsAndRoles?: Array<ChainUserCustomerRole>;
    bankAccountInfo?: BankAccountInfo;
    organization?: ChainOrganization;
    /**
     * UserCustomer id - FARXXXX
     */
    userCustomerId?: string;
}

/**
 * Namespace for property- and property-value-enumerations of ChainUserCustomer.
 */
export namespace ChainUserCustomer {
    /**
     * All properties of ChainUserCustomer.
     */
    export enum Properties {
        docType = 'docType',
        _id = '_id',
        _rev = '_rev',
        /**
         * Timestamp of creation
         */
        created = 'created',
        /**
         * Timestamp of last change
         */
        lastChange = 'lastChange',
        /**
         * Id of user that created the document.
         */
        userCreatedId = 'userCreatedId',
        /**
         * Id of user that changed the document.
         */
        userChangedId = 'userChangedId',
        /**
         * Customer id from af-coffee-ap database
         */
        id = 'id',
        /**
         * Product Id as in af-coffee database
         */
        productId = 'productId',
        /**
         * Product id in chain database. If productId is given and organization with such id is in the database, then organizationId is ignored and set automatically.;
         */
        chainProductId = 'chainProductId',
        /**
         * Company Id as in af-coffee database
         */
        companyId = 'companyId',
        /**
         * Organization id. If companyId is given and organization with such id is in the database, then organizationId is ignored and set automatically.;
         */
        organizationId = 'organizationId',
        /**
         * Name of the customer.
         */
        name = 'name',
        /**
         * Surname of the customer;
         */
        surname = 'surname',
        /**
         * Gender of the customer
         */
        gender = 'gender',
        location = 'location',
        /**
         * Human readable customer identificator
         */
        customerId = 'customerId',
        contact = 'contact',
        farmInfo = 'farmInfo',
        /**
         * List of references to associations.
         */
        associationIds = 'associationIds',
        /**
         * List of references to cooperatives (producers) and their roles
         */
        cooperativeIdsAndRoles = 'cooperativeIdsAndRoles',
        bankAccountInfo = 'bankAccountInfo',
        organization = 'organization',
        /**
         * UserCustomer id - FARXXXX
         */
        userCustomerId = 'userCustomerId'
    }


    export function formMetadata() {
        return  {
            metadata: formMetadata,
            classname: 'ChainUserCustomer',
            vars: [
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'docType',
                    classname: 'ChainUserCustomer',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: '_id',
                    classname: 'ChainUserCustomer',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: '_rev',
                    classname: 'ChainUserCustomer',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'created',
                    classname: 'ChainUserCustomer',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'lastChange',
                    classname: 'ChainUserCustomer',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'userCreatedId',
                    classname: 'ChainUserCustomer',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'userChangedId',
                    classname: 'ChainUserCustomer',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: true,
                    name: 'id',
                    classname: 'ChainUserCustomer',
                    dataType: 'number',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: true,
                    name: 'productId',
                    classname: 'ChainUserCustomer',
                    dataType: 'number',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'chainProductId',
                    classname: 'ChainUserCustomer',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: true,
                    name: 'companyId',
                    classname: 'ChainUserCustomer',
                    dataType: 'number',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'organizationId',
                    classname: 'ChainUserCustomer',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'name',
                    classname: 'ChainUserCustomer',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: true,
                    name: 'surname',
                    classname: 'ChainUserCustomer',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: true,
                    name: 'gender',
                    classname: 'ChainUserCustomer',
                    dataType: 'any',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    metadata: ChainLocation.formMetadata,
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'location',
                    classname: 'ChainUserCustomer',
                    dataType: 'ChainLocation',
                    isPrimitiveType: false,
                    isListContainer: false,
                    complexType: 'ChainLocation'
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'customerId',
                    classname: 'ChainUserCustomer',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    metadata: ContactInfo.formMetadata,
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'contact',
                    classname: 'ChainUserCustomer',
                    dataType: 'ContactInfo',
                    isPrimitiveType: false,
                    isListContainer: false,
                    complexType: 'ContactInfo'
                },
                {
                    metadata: FarmInfo.formMetadata,
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'farmInfo',
                    classname: 'ChainUserCustomer',
                    dataType: 'FarmInfo',
                    isPrimitiveType: false,
                    isListContainer: false,
                    complexType: 'FarmInfo'
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'associationIds',
                    classname: 'ChainUserCustomer',
                    dataType: 'Array&lt;string&gt;',
                    isPrimitiveType: true,
                    isListContainer: true,
                    complexType: ''
                },
                {
                    metadata: ChainUserCustomerRole.formMetadata,
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'cooperativeIdsAndRoles',
                    classname: 'ChainUserCustomer',
                    dataType: 'Array&lt;ChainUserCustomerRole&gt;',
                    isPrimitiveType: false,
                    isListContainer: true,
                    complexType: 'ChainUserCustomerRole'
                },
                {
                    metadata: BankAccountInfo.formMetadata,
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'bankAccountInfo',
                    classname: 'ChainUserCustomer',
                    dataType: 'BankAccountInfo',
                    isPrimitiveType: false,
                    isListContainer: false,
                    complexType: 'BankAccountInfo'
                },
                {
                    metadata: ChainOrganization.formMetadata,
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'organization',
                    classname: 'ChainUserCustomer',
                    dataType: 'ChainOrganization',
                    isPrimitiveType: false,
                    isListContainer: false,
                    complexType: 'ChainOrganization'
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'userCustomerId',
                    classname: 'ChainUserCustomer',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
            ],
            validators: {
                docType: [
                ],
                _id: [
                ],
                _rev: [
                ],
                created: [
                ],
                lastChange: [
                ],
                userCreatedId: [
                ],
                userChangedId: [
                ],
                id: [
                        ['required'],
                ],
                productId: [
                        ['required'],
                ],
                chainProductId: [
                ],
                companyId: [
                        ['required'],
                ],
                organizationId: [
                ],
                name: [
                ],
                surname: [
                        ['required'],
                ],
                gender: [
                        ['required'],
                ],
                location: [
                ],
                customerId: [
                ],
                contact: [
                ],
                farmInfo: [
                ],
                associationIds: [
                ],
                cooperativeIdsAndRoles: [
                ],
                bankAccountInfo: [
                ],
                organization: [
                ],
                userCustomerId: [
                ],
            }
        }
    }

  // export const ChainUserCustomerValidationScheme = {
  //     validators: [],
  //     fields: {
  //               docType: {
  //                   validators: []
  //               },
  //               _id: {
  //                   validators: []
  //               },
  //               _rev: {
  //                   validators: []
  //               },
  //               created: {
  //                   validators: []
  //               },
  //               lastChange: {
  //                   validators: []
  //               },
  //               userCreatedId: {
  //                   validators: []
  //               },
  //               userChangedId: {
  //                   validators: []
  //               },
  //               id: {
  //                   validators: []
  //               },
  //               productId: {
  //                   validators: []
  //               },
  //               chainProductId: {
  //                   validators: []
  //               },
  //               companyId: {
  //                   validators: []
  //               },
  //               organizationId: {
  //                   validators: []
  //               },
  //               name: {
  //                   validators: []
  //               },
  //               surname: {
  //                   validators: []
  //               },
  //               gender: {
  //                   validators: []
  //               },
  //               location: {
  //                   validators: []
  //               },
  //               customerId: {
  //                   validators: []
  //               },
  //               contact: {
  //                   validators: []
  //               },
  //               farmInfo: {
  //                   validators: []
  //               },
  //               associationIds: {
  //                   validators: []
  //               },
  //               cooperativeIdsAndRoles: {
  //                   validators: []
  //               },
  //               bankAccountInfo: {
  //                   validators: []
  //               },
  //               organization: {
  //                   validators: []
  //               },
  //               userCustomerId: {
  //                   validators: []
  //               },
  //     }
  // } as SimpleValidationScheme<ChainUserCustomer>;


}


