/*
 * Copyright(c) 2009 - 2019 Abelium d.o.o.
 * Kajuhova 90, 1000 Ljubljana, Slovenia
 * All rights reserved
 * Copyright(c) 1995 - 2018 T-Systems Multimedia Solutions GmbH
 * Riesaer Str. 5, 01129 Dresden
 * All rights reserved.
 *
 * coffee-be
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the openapi-typescript-angular-generator.
 * https://github.com/alenabelium/openapi-typescript-angular-generator
 * Do not edit the class manually.
 */


import { ChainActionType } from './chainActionType';
import { ChainFacility } from './chainFacility';
import { ChainGradeAbbreviation } from './chainGradeAbbreviation';
import { ChainMeasureUnitType } from './chainMeasureUnitType';
import { ChainSemiProduct } from './chainSemiProduct';
import { ChainStockOrder } from './chainStockOrder';


/**
 * Represents a chain value transaction between product units. Essentialy a transaction denotes taking some quantity of a source product unit (sourceProductUnitid) and transferring it to some target product unit (targetProductUnitId), where the product units are necessary different. Product units can be in the same facility (e.g. processing) or in different ones (e.g. transporations). Exact business operation is denoted by actionOrShippment
 */

export interface ChainTransaction { 
    docType?: string;
    _id?: string;
    _rev?: string;
    /**
     * Timestamp of creation
     */
    created?: string;
    /**
     * Timestamp of last change
     */
    lastChange?: string;
    /**
     * Id of user that created the document.
     */
    userCreatedId?: string;
    /**
     * Id of user that changed the document.
     */
    userChangedId?: string;
    /**
     * OrganizationId
     */
    organizationId: string;
    /**
     * Transaction initiator (user), userId from af-coffee-ap
     */
    initiatorUserId: string;
    /**
     * Source stock order ids
     */
    sourceStockOrderId?: string;
    /**
     * Target stock order unit ids
     */
    targetStockOrderId?: string;
    /**
     * Semi product id. Auto set at inserting
     */
    semiProductId?: string;
    /**
     * Source facility. Set automatically from the semi product.
     */
    sourceFacilityId?: string;
    /**
     * Target facility. Set automatically from the semi product.
     */
    targetFacilityId?: string;
    /**
     * True if the transaction is a processing transactions
     */
    isProcessing?: boolean;
    actionType?: ChainActionType;
    /**
     * Transaction status.
     */
    status: any;
    /**
     * Shippment code
     */
    shippmentId?: string;
    inputMeasureUnitType?: ChainMeasureUnitType;
    /**
     * Input quantity
     */
    inputQuantity: number;
    outputMeasureUnitType?: ChainMeasureUnitType;
    /**
     * Output quantity
     */
    outputQuantity: number;
    /**
     * Price per unit
     */
    pricePerUnit?: number;
    /**
     * Currency code according to ISO 4217 for pricePerUnit
     */
    currency?: string;
    /**
     * Grade abbreviaton id
     */
    gradeAbbreviationId?: string;
    /**
     * Reject comment;
     */
    rejectComment?: string;
    gradeAbbreviation?: ChainGradeAbbreviation;
    sourceFacility?: ChainFacility;
    targetFacility?: ChainFacility;
    semiProduct?: ChainSemiProduct;
    sourceStockOrder?: ChainStockOrder;
}

/**
 * Namespace for property- and property-value-enumerations of ChainTransaction.
 */
export namespace ChainTransaction {
    /**
     * All properties of ChainTransaction.
     */
    export enum Properties {
        docType = 'docType',
        _id = '_id',
        _rev = '_rev',
        /**
         * Timestamp of creation
         */
        created = 'created',
        /**
         * Timestamp of last change
         */
        lastChange = 'lastChange',
        /**
         * Id of user that created the document.
         */
        userCreatedId = 'userCreatedId',
        /**
         * Id of user that changed the document.
         */
        userChangedId = 'userChangedId',
        /**
         * OrganizationId
         */
        organizationId = 'organizationId',
        /**
         * Transaction initiator (user), userId from af-coffee-ap
         */
        initiatorUserId = 'initiatorUserId',
        /**
         * Source stock order ids
         */
        sourceStockOrderId = 'sourceStockOrderId',
        /**
         * Target stock order unit ids
         */
        targetStockOrderId = 'targetStockOrderId',
        /**
         * Semi product id. Auto set at inserting
         */
        semiProductId = 'semiProductId',
        /**
         * Source facility. Set automatically from the semi product.
         */
        sourceFacilityId = 'sourceFacilityId',
        /**
         * Target facility. Set automatically from the semi product.
         */
        targetFacilityId = 'targetFacilityId',
        /**
         * True if the transaction is a processing transactions
         */
        isProcessing = 'isProcessing',
        actionType = 'actionType',
        /**
         * Transaction status.
         */
        status = 'status',
        /**
         * Shippment code
         */
        shippmentId = 'shippmentId',
        inputMeasureUnitType = 'inputMeasureUnitType',
        /**
         * Input quantity
         */
        inputQuantity = 'inputQuantity',
        outputMeasureUnitType = 'outputMeasureUnitType',
        /**
         * Output quantity
         */
        outputQuantity = 'outputQuantity',
        /**
         * Price per unit
         */
        pricePerUnit = 'pricePerUnit',
        /**
         * Currency code according to ISO 4217 for pricePerUnit
         */
        currency = 'currency',
        /**
         * Grade abbreviaton id
         */
        gradeAbbreviationId = 'gradeAbbreviationId',
        /**
         * Reject comment;
         */
        rejectComment = 'rejectComment',
        gradeAbbreviation = 'gradeAbbreviation',
        sourceFacility = 'sourceFacility',
        targetFacility = 'targetFacility',
        semiProduct = 'semiProduct',
        sourceStockOrder = 'sourceStockOrder'
    }


    export function formMetadata() {
        return  {
            metadata: formMetadata,
            classname: 'ChainTransaction',
            vars: [
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'docType',
                    classname: 'ChainTransaction',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: '_id',
                    classname: 'ChainTransaction',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: '_rev',
                    classname: 'ChainTransaction',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'created',
                    classname: 'ChainTransaction',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'lastChange',
                    classname: 'ChainTransaction',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'userCreatedId',
                    classname: 'ChainTransaction',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'userChangedId',
                    classname: 'ChainTransaction',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: true,
                    name: 'organizationId',
                    classname: 'ChainTransaction',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: true,
                    name: 'initiatorUserId',
                    classname: 'ChainTransaction',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'sourceStockOrderId',
                    classname: 'ChainTransaction',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'targetStockOrderId',
                    classname: 'ChainTransaction',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'semiProductId',
                    classname: 'ChainTransaction',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'sourceFacilityId',
                    classname: 'ChainTransaction',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'targetFacilityId',
                    classname: 'ChainTransaction',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'isProcessing',
                    classname: 'ChainTransaction',
                    dataType: 'boolean',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    metadata: ChainActionType.formMetadata,
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'actionType',
                    classname: 'ChainTransaction',
                    dataType: 'ChainActionType',
                    isPrimitiveType: false,
                    isListContainer: false,
                    complexType: 'ChainActionType'
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: true,
                    name: 'status',
                    classname: 'ChainTransaction',
                    dataType: 'any',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'shippmentId',
                    classname: 'ChainTransaction',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    metadata: ChainMeasureUnitType.formMetadata,
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'inputMeasureUnitType',
                    classname: 'ChainTransaction',
                    dataType: 'ChainMeasureUnitType',
                    isPrimitiveType: false,
                    isListContainer: false,
                    complexType: 'ChainMeasureUnitType'
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: true,
                    name: 'inputQuantity',
                    classname: 'ChainTransaction',
                    dataType: 'number',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    metadata: ChainMeasureUnitType.formMetadata,
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'outputMeasureUnitType',
                    classname: 'ChainTransaction',
                    dataType: 'ChainMeasureUnitType',
                    isPrimitiveType: false,
                    isListContainer: false,
                    complexType: 'ChainMeasureUnitType'
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: true,
                    name: 'outputQuantity',
                    classname: 'ChainTransaction',
                    dataType: 'number',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'pricePerUnit',
                    classname: 'ChainTransaction',
                    dataType: 'number',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'currency',
                    classname: 'ChainTransaction',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'gradeAbbreviationId',
                    classname: 'ChainTransaction',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'rejectComment',
                    classname: 'ChainTransaction',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    metadata: ChainGradeAbbreviation.formMetadata,
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'gradeAbbreviation',
                    classname: 'ChainTransaction',
                    dataType: 'ChainGradeAbbreviation',
                    isPrimitiveType: false,
                    isListContainer: false,
                    complexType: 'ChainGradeAbbreviation'
                },
                {
                    metadata: ChainFacility.formMetadata,
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'sourceFacility',
                    classname: 'ChainTransaction',
                    dataType: 'ChainFacility',
                    isPrimitiveType: false,
                    isListContainer: false,
                    complexType: 'ChainFacility'
                },
                {
                    metadata: ChainFacility.formMetadata,
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'targetFacility',
                    classname: 'ChainTransaction',
                    dataType: 'ChainFacility',
                    isPrimitiveType: false,
                    isListContainer: false,
                    complexType: 'ChainFacility'
                },
                {
                    metadata: ChainSemiProduct.formMetadata,
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'semiProduct',
                    classname: 'ChainTransaction',
                    dataType: 'ChainSemiProduct',
                    isPrimitiveType: false,
                    isListContainer: false,
                    complexType: 'ChainSemiProduct'
                },
                {
                    metadata: ChainStockOrder.formMetadata,
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'sourceStockOrder',
                    classname: 'ChainTransaction',
                    dataType: 'ChainStockOrder',
                    isPrimitiveType: false,
                    isListContainer: false,
                    complexType: 'ChainStockOrder'
                },
            ],
            validators: {
                docType: [
                ],
                _id: [
                ],
                _rev: [
                ],
                created: [
                ],
                lastChange: [
                ],
                userCreatedId: [
                ],
                userChangedId: [
                ],
                organizationId: [
                        ['required'],
                ],
                initiatorUserId: [
                        ['required'],
                ],
                sourceStockOrderId: [
                ],
                targetStockOrderId: [
                ],
                semiProductId: [
                ],
                sourceFacilityId: [
                ],
                targetFacilityId: [
                ],
                isProcessing: [
                ],
                actionType: [
                ],
                status: [
                        ['required'],
                ],
                shippmentId: [
                ],
                inputMeasureUnitType: [
                ],
                inputQuantity: [
                        ['required'],
                ],
                outputMeasureUnitType: [
                ],
                outputQuantity: [
                        ['required'],
                ],
                pricePerUnit: [
                ],
                currency: [
                ],
                gradeAbbreviationId: [
                ],
                rejectComment: [
                ],
                gradeAbbreviation: [
                ],
                sourceFacility: [
                ],
                targetFacility: [
                ],
                semiProduct: [
                ],
                sourceStockOrder: [
                ],
            }
        }
    }

  // export const ChainTransactionValidationScheme = {
  //     validators: [],
  //     fields: {
  //               docType: {
  //                   validators: []
  //               },
  //               _id: {
  //                   validators: []
  //               },
  //               _rev: {
  //                   validators: []
  //               },
  //               created: {
  //                   validators: []
  //               },
  //               lastChange: {
  //                   validators: []
  //               },
  //               userCreatedId: {
  //                   validators: []
  //               },
  //               userChangedId: {
  //                   validators: []
  //               },
  //               organizationId: {
  //                   validators: []
  //               },
  //               initiatorUserId: {
  //                   validators: []
  //               },
  //               sourceStockOrderId: {
  //                   validators: []
  //               },
  //               targetStockOrderId: {
  //                   validators: []
  //               },
  //               semiProductId: {
  //                   validators: []
  //               },
  //               sourceFacilityId: {
  //                   validators: []
  //               },
  //               targetFacilityId: {
  //                   validators: []
  //               },
  //               isProcessing: {
  //                   validators: []
  //               },
  //               actionType: {
  //                   validators: []
  //               },
  //               status: {
  //                   validators: []
  //               },
  //               shippmentId: {
  //                   validators: []
  //               },
  //               inputMeasureUnitType: {
  //                   validators: []
  //               },
  //               inputQuantity: {
  //                   validators: []
  //               },
  //               outputMeasureUnitType: {
  //                   validators: []
  //               },
  //               outputQuantity: {
  //                   validators: []
  //               },
  //               pricePerUnit: {
  //                   validators: []
  //               },
  //               currency: {
  //                   validators: []
  //               },
  //               gradeAbbreviationId: {
  //                   validators: []
  //               },
  //               rejectComment: {
  //                   validators: []
  //               },
  //               gradeAbbreviation: {
  //                   validators: []
  //               },
  //               sourceFacility: {
  //                   validators: []
  //               },
  //               targetFacility: {
  //                   validators: []
  //               },
  //               semiProduct: {
  //                   validators: []
  //               },
  //               sourceStockOrder: {
  //                   validators: []
  //               },
  //     }
  // } as SimpleValidationScheme<ChainTransaction>;


}


