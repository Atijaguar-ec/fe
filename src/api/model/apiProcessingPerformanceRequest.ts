/*
 * Copyright(c) 2009 - 2019 Abelium d.o.o.
 * Kajuhova 90, 1000 Ljubljana, Slovenia
 * All rights reserved
 * Copyright(c) 1995 - 2018 T-Systems Multimedia Solutions GmbH
 * Riesaer Str. 5, 01129 Dresden
 * All rights reserved.
 *
 * INATrace Services API
 * Abelium INATrace Services API swagger documentation
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the openapi-typescript-angular-generator.
 * https://github.com/alenabelium/openapi-typescript-angular-generator
 * Do not edit the class manually.
 */


import { ApiProcessingPerformanceRequestEvidenceField } from './apiProcessingPerformanceRequestEvidenceField';
import { MeasureUnitType } from './measureUnitType';



export interface ApiProcessingPerformanceRequest { 
    aggregationType?: ApiProcessingPerformanceRequest.AggregationTypeEnum;
    companyId?: number;
    dateEnd?: string;
    dateStart?: string;
    evidenceFields?: Array<ApiProcessingPerformanceRequestEvidenceField>;
    facilityId?: number;
    measureUnitType?: MeasureUnitType;
    processActionId?: number;
}

/**
 * Namespace for property- and property-value-enumerations of ApiProcessingPerformanceRequest.
 */
export namespace ApiProcessingPerformanceRequest {
    /**
     * All properties of ApiProcessingPerformanceRequest.
     */
    export enum Properties {
        aggregationType = 'aggregationType',
        companyId = 'companyId',
        dateEnd = 'dateEnd',
        dateStart = 'dateStart',
        evidenceFields = 'evidenceFields',
        facilityId = 'facilityId',
        measureUnitType = 'measureUnitType',
        processActionId = 'processActionId'
    }

    /**
     * All possible values of aggregationType.
     */
    export enum AggregationTypeEnum {
        DAY = 'DAY',
        WEEK = 'WEEK',
        MONTH = 'MONTH',
        YEAR = 'YEAR'
    }


    export function formMetadata() {
        return  {
            metadata: formMetadata,
            classname: 'ApiProcessingPerformanceRequest',
            vars: [
                {
                    isReadOnly: false,
                    isEnum: true,
                    datatypeWithEnum: 'ApiProcessingPerformanceRequest.AggregationTypeEnum',
                    required: false,
                    name: 'aggregationType',
                    classname: 'ApiProcessingPerformanceRequest',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'companyId',
                    classname: 'ApiProcessingPerformanceRequest',
                    dataType: 'number',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'dateEnd',
                    classname: 'ApiProcessingPerformanceRequest',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'dateStart',
                    classname: 'ApiProcessingPerformanceRequest',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    metadata: ApiProcessingPerformanceRequestEvidenceField.formMetadata,
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'evidenceFields',
                    classname: 'ApiProcessingPerformanceRequest',
                    dataType: 'Array&lt;ApiProcessingPerformanceRequestEvidenceField&gt;',
                    isPrimitiveType: false,
                    isListContainer: true,
                    complexType: 'ApiProcessingPerformanceRequestEvidenceField'
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'facilityId',
                    classname: 'ApiProcessingPerformanceRequest',
                    dataType: 'number',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    metadata: MeasureUnitType.formMetadata,
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'measureUnitType',
                    classname: 'ApiProcessingPerformanceRequest',
                    dataType: 'MeasureUnitType',
                    isPrimitiveType: false,
                    isListContainer: false,
                    complexType: 'MeasureUnitType'
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'processActionId',
                    classname: 'ApiProcessingPerformanceRequest',
                    dataType: 'number',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
            ],
            validators: {
                aggregationType: [
                ],
                companyId: [
                ],
                dateEnd: [
                ],
                dateStart: [
                ],
                evidenceFields: [
                ],
                facilityId: [
                ],
                measureUnitType: [
                ],
                processActionId: [
                ],
            }
        }
    }

  // export const ApiProcessingPerformanceRequestValidationScheme = {
  //     validators: [],
  //     fields: {
  //               aggregationType: {
  //                   validators: []
  //               },
  //               companyId: {
  //                   validators: []
  //               },
  //               dateEnd: {
  //                   validators: []
  //               },
  //               dateStart: {
  //                   validators: []
  //               },
  //               evidenceFields: {
  //                   validators: []
  //               },
  //               facilityId: {
  //                   validators: []
  //               },
  //               measureUnitType: {
  //                   validators: []
  //               },
  //               processActionId: {
  //                   validators: []
  //               },
  //     }
  // } as SimpleValidationScheme<ApiProcessingPerformanceRequest>;


}


