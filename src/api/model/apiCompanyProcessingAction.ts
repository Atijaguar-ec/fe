/*
 * Copyright(c) 2009 - 2019 Abelium d.o.o.
 * Kajuhova 90, 1000 Ljubljana, Slovenia
 * All rights reserved
 * Copyright(c) 1995 - 2018 T-Systems Multimedia Solutions GmbH
 * Riesaer Str. 5, 01129 Dresden
 * All rights reserved.
 *
 * INATrace Services API
 * INATrace Services API OpenAPI documentation
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the openapi-typescript-angular-generator.
 * https://github.com/alenabelium/openapi-typescript-angular-generator
 * Do not edit the class manually.
 */


import { ApiProcessingAction } from './apiProcessingAction';



export interface ApiCompanyProcessingAction { 
    /**
     * Entity id
     */
    id?: number;
    processingAction?: ApiProcessingAction;
    /**
     * Whether this processing action is enabled for the company
     */
    enabled?: boolean;
    /**
     * Company-specific order override (null uses global sortOrder)
     */
    orderOverride?: number;
    /**
     * Company-specific alias label (null uses processing action name)
     */
    aliasLabel?: string;
    /**
     * Effective order (computed from orderOverride or global sortOrder)
     */
    effectiveOrder?: number;
    /**
     * Effective label (computed from aliasLabel or processing action name)
     */
    effectiveLabel?: string;
}

/**
 * Namespace for property- and property-value-enumerations of ApiCompanyProcessingAction.
 */
export namespace ApiCompanyProcessingAction {
    /**
     * All properties of ApiCompanyProcessingAction.
     */
    export enum Properties {
        /**
         * Entity id
         */
        id = 'id',
        processingAction = 'processingAction',
        /**
         * Whether this processing action is enabled for the company
         */
        enabled = 'enabled',
        /**
         * Company-specific order override (null uses global sortOrder)
         */
        orderOverride = 'orderOverride',
        /**
         * Company-specific alias label (null uses processing action name)
         */
        aliasLabel = 'aliasLabel',
        /**
         * Effective order (computed from orderOverride or global sortOrder)
         */
        effectiveOrder = 'effectiveOrder',
        /**
         * Effective label (computed from aliasLabel or processing action name)
         */
        effectiveLabel = 'effectiveLabel'
    }


    export function formMetadata() {
        return  {
            metadata: formMetadata,
            classname: 'ApiCompanyProcessingAction',
            vars: [
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'id',
                    classname: 'ApiCompanyProcessingAction',
                    dataType: 'number',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    metadata: ApiProcessingAction.formMetadata,
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'processingAction',
                    classname: 'ApiCompanyProcessingAction',
                    dataType: 'ApiProcessingAction',
                    isPrimitiveType: false,
                    isListContainer: false,
                    complexType: 'ApiProcessingAction'
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'enabled',
                    classname: 'ApiCompanyProcessingAction',
                    dataType: 'boolean',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'orderOverride',
                    classname: 'ApiCompanyProcessingAction',
                    dataType: 'number',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'aliasLabel',
                    classname: 'ApiCompanyProcessingAction',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'effectiveOrder',
                    classname: 'ApiCompanyProcessingAction',
                    dataType: 'number',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'effectiveLabel',
                    classname: 'ApiCompanyProcessingAction',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
            ],
            validators: {
                id: [
                ],
                processingAction: [
                ],
                enabled: [
                ],
                orderOverride: [
                ],
                aliasLabel: [
                ],
                effectiveOrder: [
                ],
                effectiveLabel: [
                ],
            }
        }
    }

  // export const ApiCompanyProcessingActionValidationScheme = {
  //     validators: [],
  //     fields: {
  //               id: {
  //                   validators: []
  //               },
  //               processingAction: {
  //                   validators: []
  //               },
  //               enabled: {
  //                   validators: []
  //               },
  //               orderOverride: {
  //                   validators: []
  //               },
  //               aliasLabel: {
  //                   validators: []
  //               },
  //               effectiveOrder: {
  //                   validators: []
  //               },
  //               effectiveLabel: {
  //                   validators: []
  //               },
  //     }
  // } as SimpleValidationScheme<ApiCompanyProcessingAction>;


}


