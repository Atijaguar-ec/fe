/*
 * Copyright(c) 2009 - 2019 Abelium d.o.o.
 * Kajuhova 90, 1000 Ljubljana, Slovenia
 * All rights reserved
 * Copyright(c) 1995 - 2018 T-Systems Multimedia Solutions GmbH
 * Riesaer Str. 5, 01129 Dresden
 * All rights reserved.
 *
 * INATrace Services API
 * Abelium INATrace Services API swagger documentation
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the openapi-typescript-angular-generator.
 * https://github.com/alenabelium/openapi-typescript-angular-generator
 * Do not edit the class manually.
 */


import { ApiCompany } from './apiCompany';
import { ApiUserCustomer } from './apiUserCustomer';



export interface ApiUserCustomerCooperative { 
    company?: ApiCompany;
    /**
     * Entity id
     */
    id?: number;
    userCustomer?: ApiUserCustomer;
    /**
     * User customer type (collector, farmer)
     */
    userCustomerType?: ApiUserCustomerCooperative.UserCustomerTypeEnum;
}

/**
 * Namespace for property- and property-value-enumerations of ApiUserCustomerCooperative.
 */
export namespace ApiUserCustomerCooperative {
    /**
     * All properties of ApiUserCustomerCooperative.
     */
    export enum Properties {
        company = 'company',
        /**
         * Entity id
         */
        id = 'id',
        userCustomer = 'userCustomer',
        /**
         * User customer type (collector, farmer)
         */
        userCustomerType = 'userCustomerType'
    }

    /**
     * All possible values of userCustomerType.
     */
    export enum UserCustomerTypeEnum {
        COLLECTOR = 'COLLECTOR',
        FARMER = 'FARMER'
    }


    export function formMetadata() {
        return  {
            metadata: formMetadata,
            classname: 'ApiUserCustomerCooperative',
            vars: [
                {
                    metadata: ApiCompany.formMetadata,
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'company',
                    classname: 'ApiUserCustomerCooperative',
                    dataType: 'ApiCompany',
                    isPrimitiveType: false,
                    isListContainer: false,
                    complexType: 'ApiCompany'
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'id',
                    classname: 'ApiUserCustomerCooperative',
                    dataType: 'number',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    metadata: ApiUserCustomer.formMetadata,
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'userCustomer',
                    classname: 'ApiUserCustomerCooperative',
                    dataType: 'ApiUserCustomer',
                    isPrimitiveType: false,
                    isListContainer: false,
                    complexType: 'ApiUserCustomer'
                },
                {
                    isReadOnly: false,
                    isEnum: true,
                    datatypeWithEnum: 'ApiUserCustomerCooperative.UserCustomerTypeEnum',
                    required: false,
                    name: 'userCustomerType',
                    classname: 'ApiUserCustomerCooperative',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
            ],
            validators: {
                company: [
                ],
                id: [
                ],
                userCustomer: [
                ],
                userCustomerType: [
                ],
            }
        }
    }

  // export const ApiUserCustomerCooperativeValidationScheme = {
  //     validators: [],
  //     fields: {
  //               company: {
  //                   validators: []
  //               },
  //               id: {
  //                   validators: []
  //               },
  //               userCustomer: {
  //                   validators: []
  //               },
  //               userCustomerType: {
  //                   validators: []
  //               },
  //     }
  // } as SimpleValidationScheme<ApiUserCustomerCooperative>;


}


