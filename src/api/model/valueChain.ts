/*
 * Copyright(c) 2009 - 2019 Abelium d.o.o.
 * Kajuhova 90, 1000 Ljubljana, Slovenia
 * All rights reserved
 * Copyright(c) 1995 - 2018 T-Systems Multimedia Solutions GmbH
 * Riesaer Str. 5, 01129 Dresden
 * All rights reserved.
 *
 * INATrace Services API
 * Abelium INATrace Services API swagger documentation
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the openapi-typescript-angular-generator.
 * https://github.com/alenabelium/openapi-typescript-angular-generator
 * Do not edit the class manually.
 */


import { User } from './user';
import { ValueChainFacilityType } from './valueChainFacilityType';
import { ValueChainGradeAbbreviation } from './valueChainGradeAbbreviation';
import { ValueChainMeasureUnitType } from './valueChainMeasureUnitType';
import { ValueChainProcEvidenceType } from './valueChainProcEvidenceType';
import { ValueChainProcessingEvidenceField } from './valueChainProcessingEvidenceField';
import { ValueChainSemiProduct } from './valueChainSemiProduct';



export interface ValueChain { 
    createdBy?: User;
    creationTimestamp?: Date;
    description?: string;
    entityVersion?: number;
    facilityTypes?: Array<ValueChainFacilityType>;
    gradeAbbreviations?: Array<ValueChainGradeAbbreviation>;
    id?: number;
    measureUnitTypes?: Array<ValueChainMeasureUnitType>;
    name?: string;
    procEvidenceTypes?: Array<ValueChainProcEvidenceType>;
    processingEvidenceFields?: Array<ValueChainProcessingEvidenceField>;
    semiProducts?: Array<ValueChainSemiProduct>;
    updateTimestamp?: Date;
    updatedBy?: User;
    valueChainStatus?: ValueChain.ValueChainStatusEnum;
}

/**
 * Namespace for property- and property-value-enumerations of ValueChain.
 */
export namespace ValueChain {
    /**
     * All properties of ValueChain.
     */
    export enum Properties {
        createdBy = 'createdBy',
        creationTimestamp = 'creationTimestamp',
        description = 'description',
        entityVersion = 'entityVersion',
        facilityTypes = 'facilityTypes',
        gradeAbbreviations = 'gradeAbbreviations',
        id = 'id',
        measureUnitTypes = 'measureUnitTypes',
        name = 'name',
        procEvidenceTypes = 'procEvidenceTypes',
        processingEvidenceFields = 'processingEvidenceFields',
        semiProducts = 'semiProducts',
        updateTimestamp = 'updateTimestamp',
        updatedBy = 'updatedBy',
        valueChainStatus = 'valueChainStatus'
    }

    /**
     * All possible values of valueChainStatus.
     */
    export enum ValueChainStatusEnum {
        ENABLED = 'ENABLED',
        DISABLED = 'DISABLED'
    }


    export function formMetadata() {
        return  {
            metadata: formMetadata,
            classname: 'ValueChain',
            vars: [
                {
                    metadata: User.formMetadata,
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'createdBy',
                    classname: 'ValueChain',
                    dataType: 'User',
                    isPrimitiveType: false,
                    isListContainer: false,
                    complexType: 'User'
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'creationTimestamp',
                    classname: 'ValueChain',
                    dataType: 'Date',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'description',
                    classname: 'ValueChain',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'entityVersion',
                    classname: 'ValueChain',
                    dataType: 'number',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    metadata: ValueChainFacilityType.formMetadata,
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'facilityTypes',
                    classname: 'ValueChain',
                    dataType: 'Array&lt;ValueChainFacilityType&gt;',
                    isPrimitiveType: false,
                    isListContainer: true,
                    complexType: 'ValueChainFacilityType'
                },
                {
                    metadata: ValueChainGradeAbbreviation.formMetadata,
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'gradeAbbreviations',
                    classname: 'ValueChain',
                    dataType: 'Array&lt;ValueChainGradeAbbreviation&gt;',
                    isPrimitiveType: false,
                    isListContainer: true,
                    complexType: 'ValueChainGradeAbbreviation'
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'id',
                    classname: 'ValueChain',
                    dataType: 'number',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    metadata: ValueChainMeasureUnitType.formMetadata,
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'measureUnitTypes',
                    classname: 'ValueChain',
                    dataType: 'Array&lt;ValueChainMeasureUnitType&gt;',
                    isPrimitiveType: false,
                    isListContainer: true,
                    complexType: 'ValueChainMeasureUnitType'
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'name',
                    classname: 'ValueChain',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    metadata: ValueChainProcEvidenceType.formMetadata,
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'procEvidenceTypes',
                    classname: 'ValueChain',
                    dataType: 'Array&lt;ValueChainProcEvidenceType&gt;',
                    isPrimitiveType: false,
                    isListContainer: true,
                    complexType: 'ValueChainProcEvidenceType'
                },
                {
                    metadata: ValueChainProcessingEvidenceField.formMetadata,
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'processingEvidenceFields',
                    classname: 'ValueChain',
                    dataType: 'Array&lt;ValueChainProcessingEvidenceField&gt;',
                    isPrimitiveType: false,
                    isListContainer: true,
                    complexType: 'ValueChainProcessingEvidenceField'
                },
                {
                    metadata: ValueChainSemiProduct.formMetadata,
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'semiProducts',
                    classname: 'ValueChain',
                    dataType: 'Array&lt;ValueChainSemiProduct&gt;',
                    isPrimitiveType: false,
                    isListContainer: true,
                    complexType: 'ValueChainSemiProduct'
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'updateTimestamp',
                    classname: 'ValueChain',
                    dataType: 'Date',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    metadata: User.formMetadata,
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'updatedBy',
                    classname: 'ValueChain',
                    dataType: 'User',
                    isPrimitiveType: false,
                    isListContainer: false,
                    complexType: 'User'
                },
                {
                    isReadOnly: false,
                    isEnum: true,
                    datatypeWithEnum: 'ValueChain.ValueChainStatusEnum',
                    required: false,
                    name: 'valueChainStatus',
                    classname: 'ValueChain',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
            ],
            validators: {
                createdBy: [
                ],
                creationTimestamp: [
                ],
                description: [
                ],
                entityVersion: [
                ],
                facilityTypes: [
                ],
                gradeAbbreviations: [
                ],
                id: [
                ],
                measureUnitTypes: [
                ],
                name: [
                ],
                procEvidenceTypes: [
                ],
                processingEvidenceFields: [
                ],
                semiProducts: [
                ],
                updateTimestamp: [
                ],
                updatedBy: [
                ],
                valueChainStatus: [
                ],
            }
        }
    }

  // export const ValueChainValidationScheme = {
  //     validators: [],
  //     fields: {
  //               createdBy: {
  //                   validators: []
  //               },
  //               creationTimestamp: {
  //                   validators: []
  //               },
  //               description: {
  //                   validators: []
  //               },
  //               entityVersion: {
  //                   validators: []
  //               },
  //               facilityTypes: {
  //                   validators: []
  //               },
  //               gradeAbbreviations: {
  //                   validators: []
  //               },
  //               id: {
  //                   validators: []
  //               },
  //               measureUnitTypes: {
  //                   validators: []
  //               },
  //               name: {
  //                   validators: []
  //               },
  //               procEvidenceTypes: {
  //                   validators: []
  //               },
  //               processingEvidenceFields: {
  //                   validators: []
  //               },
  //               semiProducts: {
  //                   validators: []
  //               },
  //               updateTimestamp: {
  //                   validators: []
  //               },
  //               updatedBy: {
  //                   validators: []
  //               },
  //               valueChainStatus: {
  //                   validators: []
  //               },
  //     }
  // } as SimpleValidationScheme<ValueChain>;


}


