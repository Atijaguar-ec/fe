/*
 * Copyright(c) 2009 - 2019 Abelium d.o.o.
 * Kajuhova 90, 1000 Ljubljana, Slovenia
 * All rights reserved
 * Copyright(c) 1995 - 2018 T-Systems Multimedia Solutions GmbH
 * Riesaer Str. 5, 01129 Dresden
 * All rights reserved.
 *
 * INATrace Services API
 * Abelium INATrace Services API swagger documentation
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the openapi-typescript-angular-generator.
 * https://github.com/alenabelium/openapi-typescript-angular-generator
 * Do not edit the class manually.
 */


import { ApiBaseEntity } from './apiBaseEntity';
import { ApiDocumentStorageKey } from './apiDocumentStorageKey';
import { ApiProcessUpdate } from './apiProcessUpdate';
import { ApiProductLocation } from './apiProductLocation';
import { ApiResponsibilityUpdate } from './apiResponsibilityUpdate';
import { ApiSustainability } from './apiSustainability';



export interface ApiProductUpdate { 
    company?: ApiBaseEntity;
    /**
     * product description
     */
    description?: string;
    /**
     * how to Use / Recipes - Describe the best way to use the product (e.g. recipes, how to apply the product...)
     */
    howToUse?: string;
    /**
     * Entity id
     */
    id?: number;
    /**
     * ingredients - list the ingredients in the product and describe their properties
     */
    ingredients?: string;
    /**
     * Key Markets, market name - share number map
     */
    keyMarketsShare?: { [key: string]: number; };
    /**
     * product name
     */
    name?: string;
    /**
     * nutritional Value - list the nutritional value of the product
     */
    nutritionalValue?: string;
    /**
     * origin - farmer location
     */
    originLocations?: Array<ApiProductLocation>;
    /**
     * origin - text and quantity input - Briefly describe where the product or its ingredients are produced
     */
    originText?: string;
    photo?: ApiDocumentStorageKey;
    process?: ApiProcessUpdate;
    responsibility?: ApiResponsibilityUpdate;
    sustainability?: ApiSustainability;
}

/**
 * Namespace for property- and property-value-enumerations of ApiProductUpdate.
 */
export namespace ApiProductUpdate {
    /**
     * All properties of ApiProductUpdate.
     */
    export enum Properties {
        company = 'company',
        /**
         * product description
         */
        description = 'description',
        /**
         * how to Use / Recipes - Describe the best way to use the product (e.g. recipes, how to apply the product...)
         */
        howToUse = 'howToUse',
        /**
         * Entity id
         */
        id = 'id',
        /**
         * ingredients - list the ingredients in the product and describe their properties
         */
        ingredients = 'ingredients',
        /**
         * Key Markets, market name - share number map
         */
        keyMarketsShare = 'keyMarketsShare',
        /**
         * product name
         */
        name = 'name',
        /**
         * nutritional Value - list the nutritional value of the product
         */
        nutritionalValue = 'nutritionalValue',
        /**
         * origin - farmer location
         */
        originLocations = 'originLocations',
        /**
         * origin - text and quantity input - Briefly describe where the product or its ingredients are produced
         */
        originText = 'originText',
        photo = 'photo',
        process = 'process',
        responsibility = 'responsibility',
        sustainability = 'sustainability'
    }


    export function formMetadata() {
        return  {
            metadata: formMetadata,
            classname: 'ApiProductUpdate',
            vars: [
                {
                    metadata: ApiBaseEntity.formMetadata,
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'company',
                    classname: 'ApiProductUpdate',
                    dataType: 'ApiBaseEntity',
                    isPrimitiveType: false,
                    isListContainer: false,
                    complexType: 'ApiBaseEntity'
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'description',
                    classname: 'ApiProductUpdate',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'howToUse',
                    classname: 'ApiProductUpdate',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'id',
                    classname: 'ApiProductUpdate',
                    dataType: 'number',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'ingredients',
                    classname: 'ApiProductUpdate',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'keyMarketsShare',
                    classname: 'ApiProductUpdate',
                    dataType: '{ [key: string]: number; }',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'name',
                    classname: 'ApiProductUpdate',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'nutritionalValue',
                    classname: 'ApiProductUpdate',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    metadata: ApiProductLocation.formMetadata,
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'originLocations',
                    classname: 'ApiProductUpdate',
                    dataType: 'Array&lt;ApiProductLocation&gt;',
                    isPrimitiveType: false,
                    isListContainer: true,
                    complexType: 'ApiProductLocation'
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'originText',
                    classname: 'ApiProductUpdate',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    metadata: ApiDocumentStorageKey.formMetadata,
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'photo',
                    classname: 'ApiProductUpdate',
                    dataType: 'ApiDocumentStorageKey',
                    isPrimitiveType: false,
                    isListContainer: false,
                    complexType: 'ApiDocumentStorageKey'
                },
                {
                    metadata: ApiProcessUpdate.formMetadata,
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'process',
                    classname: 'ApiProductUpdate',
                    dataType: 'ApiProcessUpdate',
                    isPrimitiveType: false,
                    isListContainer: false,
                    complexType: 'ApiProcessUpdate'
                },
                {
                    metadata: ApiResponsibilityUpdate.formMetadata,
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'responsibility',
                    classname: 'ApiProductUpdate',
                    dataType: 'ApiResponsibilityUpdate',
                    isPrimitiveType: false,
                    isListContainer: false,
                    complexType: 'ApiResponsibilityUpdate'
                },
                {
                    metadata: ApiSustainability.formMetadata,
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'sustainability',
                    classname: 'ApiProductUpdate',
                    dataType: 'ApiSustainability',
                    isPrimitiveType: false,
                    isListContainer: false,
                    complexType: 'ApiSustainability'
                },
            ],
            validators: {
                company: [
                ],
                description: [
                ],
                howToUse: [
                ],
                id: [
                ],
                ingredients: [
                ],
                keyMarketsShare: [
                ],
                name: [
                ],
                nutritionalValue: [
                ],
                originLocations: [
                ],
                originText: [
                ],
                photo: [
                ],
                process: [
                ],
                responsibility: [
                ],
                sustainability: [
                ],
            }
        }
    }

  // export const ApiProductUpdateValidationScheme = {
  //     validators: [],
  //     fields: {
  //               company: {
  //                   validators: []
  //               },
  //               description: {
  //                   validators: []
  //               },
  //               howToUse: {
  //                   validators: []
  //               },
  //               id: {
  //                   validators: []
  //               },
  //               ingredients: {
  //                   validators: []
  //               },
  //               keyMarketsShare: {
  //                   validators: []
  //               },
  //               name: {
  //                   validators: []
  //               },
  //               nutritionalValue: {
  //                   validators: []
  //               },
  //               originLocations: {
  //                   validators: []
  //               },
  //               originText: {
  //                   validators: []
  //               },
  //               photo: {
  //                   validators: []
  //               },
  //               process: {
  //                   validators: []
  //               },
  //               responsibility: {
  //                   validators: []
  //               },
  //               sustainability: {
  //                   validators: []
  //               },
  //     }
  // } as SimpleValidationScheme<ApiProductUpdate>;


}


