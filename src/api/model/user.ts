/*
 * Copyright(c) 2009 - 2019 Abelium d.o.o.
 * Kajuhova 90, 1000 Ljubljana, Slovenia
 * All rights reserved
 * Copyright(c) 1995 - 2018 T-Systems Multimedia Solutions GmbH
 * Riesaer Str. 5, 01129 Dresden
 * All rights reserved.
 *
 * INATrace Services API
 * Abelium INATrace Services API swagger documentation
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the openapi-typescript-angular-generator.
 * https://github.com/alenabelium/openapi-typescript-angular-generator
 * Do not edit the class manually.
 */


import { GrantedAuthority } from './grantedAuthority';



export interface User { 
    authorities?: Array<GrantedAuthority>;
    creationTimestamp?: Date;
    email?: string;
    id?: number;
    language?: User.LanguageEnum;
    name?: string;
    password?: string;
    role?: User.RoleEnum;
    status?: User.StatusEnum;
    surname?: string;
    updateTimestamp?: Date;
}

/**
 * Namespace for property- and property-value-enumerations of User.
 */
export namespace User {
    /**
     * All properties of User.
     */
    export enum Properties {
        authorities = 'authorities',
        creationTimestamp = 'creationTimestamp',
        email = 'email',
        id = 'id',
        language = 'language',
        name = 'name',
        password = 'password',
        role = 'role',
        status = 'status',
        surname = 'surname',
        updateTimestamp = 'updateTimestamp'
    }

    /**
     * All possible values of language.
     */
    export enum LanguageEnum {
        EN = 'EN',
        DE = 'DE',
        RW = 'RW',
        ES = 'ES'
    }

    /**
     * All possible values of role.
     */
    export enum RoleEnum {
        USER = 'USER',
        ADMIN = 'ADMIN',
        MANAGER = 'MANAGER',
        ACCOUNTANT = 'ACCOUNTANT'
    }

    /**
     * All possible values of status.
     */
    export enum StatusEnum {
        UNCONFIRMED = 'UNCONFIRMED',
        CONFIRMEDEMAIL = 'CONFIRMED_EMAIL',
        ACTIVE = 'ACTIVE',
        DEACTIVATED = 'DEACTIVATED'
    }


    export function formMetadata() {
        return  {
            metadata: formMetadata,
            classname: 'User',
            vars: [
                {
                    metadata: GrantedAuthority.formMetadata,
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'authorities',
                    classname: 'User',
                    dataType: 'Array&lt;GrantedAuthority&gt;',
                    isPrimitiveType: false,
                    isListContainer: true,
                    complexType: 'GrantedAuthority'
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'creationTimestamp',
                    classname: 'User',
                    dataType: 'Date',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'email',
                    classname: 'User',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'id',
                    classname: 'User',
                    dataType: 'number',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: true,
                    datatypeWithEnum: 'User.LanguageEnum',
                    required: false,
                    name: 'language',
                    classname: 'User',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'name',
                    classname: 'User',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'password',
                    classname: 'User',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: true,
                    datatypeWithEnum: 'User.RoleEnum',
                    required: false,
                    name: 'role',
                    classname: 'User',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: true,
                    datatypeWithEnum: 'User.StatusEnum',
                    required: false,
                    name: 'status',
                    classname: 'User',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'surname',
                    classname: 'User',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'updateTimestamp',
                    classname: 'User',
                    dataType: 'Date',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
            ],
            validators: {
                authorities: [
                ],
                creationTimestamp: [
                ],
                email: [
                ],
                id: [
                ],
                language: [
                ],
                name: [
                ],
                password: [
                ],
                role: [
                ],
                status: [
                ],
                surname: [
                ],
                updateTimestamp: [
                ],
            }
        }
    }

  // export const UserValidationScheme = {
  //     validators: [],
  //     fields: {
  //               authorities: {
  //                   validators: []
  //               },
  //               creationTimestamp: {
  //                   validators: []
  //               },
  //               email: {
  //                   validators: []
  //               },
  //               id: {
  //                   validators: []
  //               },
  //               language: {
  //                   validators: []
  //               },
  //               name: {
  //                   validators: []
  //               },
  //               password: {
  //                   validators: []
  //               },
  //               role: {
  //                   validators: []
  //               },
  //               status: {
  //                   validators: []
  //               },
  //               surname: {
  //                   validators: []
  //               },
  //               updateTimestamp: {
  //                   validators: []
  //               },
  //     }
  // } as SimpleValidationScheme<User>;


}


