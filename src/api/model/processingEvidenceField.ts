/*
 * Copyright(c) 2009 - 2019 Abelium d.o.o.
 * Kajuhova 90, 1000 Ljubljana, Slovenia
 * All rights reserved
 * Copyright(c) 1995 - 2018 T-Systems Multimedia Solutions GmbH
 * Riesaer Str. 5, 01129 Dresden
 * All rights reserved.
 *
 * INATrace Services API
 * Abelium INATrace Services API swagger documentation
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the openapi-typescript-angular-generator.
 * https://github.com/alenabelium/openapi-typescript-angular-generator
 * Do not edit the class manually.
 */


import { FileInfo } from './fileInfo';



export interface ProcessingEvidenceField { 
    creationTimestamp?: Date;
    fileMultiplicity?: number;
    files?: Array<FileInfo>;
    id?: number;
    label?: string;
    mandatory?: boolean;
    numericValue?: number;
    required?: boolean;
    requiredOnQuote?: boolean;
    stringValue?: string;
    type?: ProcessingEvidenceField.TypeEnum;
    updateTimestamp?: Date;
}

/**
 * Namespace for property- and property-value-enumerations of ProcessingEvidenceField.
 */
export namespace ProcessingEvidenceField {
    /**
     * All properties of ProcessingEvidenceField.
     */
    export enum Properties {
        creationTimestamp = 'creationTimestamp',
        fileMultiplicity = 'fileMultiplicity',
        files = 'files',
        id = 'id',
        label = 'label',
        mandatory = 'mandatory',
        numericValue = 'numericValue',
        required = 'required',
        requiredOnQuote = 'requiredOnQuote',
        stringValue = 'stringValue',
        type = 'type',
        updateTimestamp = 'updateTimestamp'
    }

    /**
     * All possible values of type.
     */
    export enum TypeEnum {
        STRING = 'STRING',
        TEXT = 'TEXT',
        NUMBER = 'NUMBER',
        INTEGER = 'INTEGER',
        DATE = 'DATE',
        OBJECT = 'OBJECT',
        ARRAY = 'ARRAY',
        PRICE = 'PRICE',
        EXCHANGERATE = 'EXCHANGE_RATE',
        TIMESTAMP = 'TIMESTAMP',
        FILE = 'FILE'
    }


    export function formMetadata() {
        return  {
            metadata: formMetadata,
            classname: 'ProcessingEvidenceField',
            vars: [
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'creationTimestamp',
                    classname: 'ProcessingEvidenceField',
                    dataType: 'Date',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'fileMultiplicity',
                    classname: 'ProcessingEvidenceField',
                    dataType: 'number',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    metadata: FileInfo.formMetadata,
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'files',
                    classname: 'ProcessingEvidenceField',
                    dataType: 'Array&lt;FileInfo&gt;',
                    isPrimitiveType: false,
                    isListContainer: true,
                    complexType: 'FileInfo'
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'id',
                    classname: 'ProcessingEvidenceField',
                    dataType: 'number',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'label',
                    classname: 'ProcessingEvidenceField',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'mandatory',
                    classname: 'ProcessingEvidenceField',
                    dataType: 'boolean',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'numericValue',
                    classname: 'ProcessingEvidenceField',
                    dataType: 'number',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'required',
                    classname: 'ProcessingEvidenceField',
                    dataType: 'boolean',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'requiredOnQuote',
                    classname: 'ProcessingEvidenceField',
                    dataType: 'boolean',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'stringValue',
                    classname: 'ProcessingEvidenceField',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: true,
                    datatypeWithEnum: 'ProcessingEvidenceField.TypeEnum',
                    required: false,
                    name: 'type',
                    classname: 'ProcessingEvidenceField',
                    dataType: 'string',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
                {
                    isReadOnly: false,
                    isEnum: false,
                    required: false,
                    name: 'updateTimestamp',
                    classname: 'ProcessingEvidenceField',
                    dataType: 'Date',
                    isPrimitiveType: true,
                    isListContainer: false,
                    complexType: ''
                },
            ],
            validators: {
                creationTimestamp: [
                ],
                fileMultiplicity: [
                ],
                files: [
                ],
                id: [
                ],
                label: [
                ],
                mandatory: [
                ],
                numericValue: [
                ],
                required: [
                ],
                requiredOnQuote: [
                ],
                stringValue: [
                ],
                type: [
                ],
                updateTimestamp: [
                ],
            }
        }
    }

  // export const ProcessingEvidenceFieldValidationScheme = {
  //     validators: [],
  //     fields: {
  //               creationTimestamp: {
  //                   validators: []
  //               },
  //               fileMultiplicity: {
  //                   validators: []
  //               },
  //               files: {
  //                   validators: []
  //               },
  //               id: {
  //                   validators: []
  //               },
  //               label: {
  //                   validators: []
  //               },
  //               mandatory: {
  //                   validators: []
  //               },
  //               numericValue: {
  //                   validators: []
  //               },
  //               required: {
  //                   validators: []
  //               },
  //               requiredOnQuote: {
  //                   validators: []
  //               },
  //               stringValue: {
  //                   validators: []
  //               },
  //               type: {
  //                   validators: []
  //               },
  //               updateTimestamp: {
  //                   validators: []
  //               },
  //     }
  // } as SimpleValidationScheme<ProcessingEvidenceField>;


}


